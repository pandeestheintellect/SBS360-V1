//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eng360Web.Models.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Eng360Entities1 : DbContext
    {
        public Eng360Entities1()
            : base("name=Eng360Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<eng_address_master> eng_address_master { get; set; }
        public virtual DbSet<eng_claim> eng_claim { get; set; }
        public virtual DbSet<eng_claim_description> eng_claim_description { get; set; }
        public virtual DbSet<eng_claim_files> eng_claim_files { get; set; }
        public virtual DbSet<eng_client_contact> eng_client_contact { get; set; }
        public virtual DbSet<eng_client_master> eng_client_master { get; set; }
        public virtual DbSet<eng_company> eng_company { get; set; }
        public virtual DbSet<eng_company_cert> eng_company_cert { get; set; }
        public virtual DbSet<eng_custom_invoice> eng_custom_invoice { get; set; }
        public virtual DbSet<eng_custom_invoice_details> eng_custom_invoice_details { get; set; }
        public virtual DbSet<eng_do_seqnum> eng_do_seqnum { get; set; }
        public virtual DbSet<eng_employee_profile> eng_employee_profile { get; set; }
        public virtual DbSet<eng_inv_seqnum> eng_inv_seqnum { get; set; }
        public virtual DbSet<eng_invoice_details> eng_invoice_details { get; set; }
        public virtual DbSet<eng_invoice_master> eng_invoice_master { get; set; }
        public virtual DbSet<eng_inward> eng_inward { get; set; }
        public virtual DbSet<eng_mm_inwdesc> eng_mm_inwdesc { get; set; }
        public virtual DbSet<eng_mm_outdesc> eng_mm_outdesc { get; set; }
        public virtual DbSet<eng_mm_stockadj_master> eng_mm_stockadj_master { get; set; }
        public virtual DbSet<eng_mm_trmaster> eng_mm_trmaster { get; set; }
        public virtual DbSet<eng_module> eng_module { get; set; }
        public virtual DbSet<eng_outward> eng_outward { get; set; }
        public virtual DbSet<eng_permission> eng_permission { get; set; }
        public virtual DbSet<eng_po_description> eng_po_description { get; set; }
        public virtual DbSet<eng_po_master> eng_po_master { get; set; }
        public virtual DbSet<eng_product_master> eng_product_master { get; set; }
        public virtual DbSet<eng_project_master> eng_project_master { get; set; }
        public virtual DbSet<eng_project_report> eng_project_report { get; set; }
        public virtual DbSet<eng_project_report_files> eng_project_report_files { get; set; }
        public virtual DbSet<eng_PTW_Conspc_Detail_Stage1> eng_PTW_Conspc_Detail_Stage1 { get; set; }
        public virtual DbSet<eng_PTW_Conspc_Detail_Stage5> eng_PTW_Conspc_Detail_Stage5 { get; set; }
        public virtual DbSet<eng_PTW_Conspc_Employee_Details> eng_PTW_Conspc_Employee_Details { get; set; }
        public virtual DbSet<eng_ptw_conspc_master> eng_ptw_conspc_master { get; set; }
        public virtual DbSet<eng_PTW_Detail_Satge1> eng_PTW_Detail_Satge1 { get; set; }
        public virtual DbSet<eng_PTW_Detail_Satge4> eng_PTW_Detail_Satge4 { get; set; }
        public virtual DbSet<eng_PTW_Employee_Details> eng_PTW_Employee_Details { get; set; }
        public virtual DbSet<eng_ptw_master> eng_ptw_master { get; set; }
        public virtual DbSet<eng_pymt_payable> eng_pymt_payable { get; set; }
        public virtual DbSet<eng_pymt_receivable> eng_pymt_receivable { get; set; }
        public virtual DbSet<eng_qa_defect> eng_qa_defect { get; set; }
        public virtual DbSet<eng_qa_defect_cpa> eng_qa_defect_cpa { get; set; }
        public virtual DbSet<eng_qa_defect_cpa_files> eng_qa_defect_cpa_files { get; set; }
        public virtual DbSet<eng_qa_defect_detail> eng_qa_defect_detail { get; set; }
        public virtual DbSet<eng_qa_defect_files> eng_qa_defect_files { get; set; }
        public virtual DbSet<eng_quote_description> eng_quote_description { get; set; }
        public virtual DbSet<eng_quote_master> eng_quote_master { get; set; }
        public virtual DbSet<eng_ra_control_measures> eng_ra_control_measures { get; set; }
        public virtual DbSet<eng_ra_hazardlist> eng_ra_hazardlist { get; set; }
        public virtual DbSet<eng_ra_location> eng_ra_location { get; set; }
        public virtual DbSet<eng_ra_possible_accident_health> eng_ra_possible_accident_health { get; set; }
        public virtual DbSet<eng_ra_process> eng_ra_process { get; set; }
        public virtual DbSet<eng_ra_trans_detail1> eng_ra_trans_detail1 { get; set; }
        public virtual DbSet<eng_ra_trans_master> eng_ra_trans_master { get; set; }
        public virtual DbSet<eng_ra_trans_racm> eng_ra_trans_racm { get; set; }
        public virtual DbSet<eng_ra_work_activity> eng_ra_work_activity { get; set; }
        public virtual DbSet<eng_safety_esh> eng_safety_esh { get; set; }
        public virtual DbSet<eng_safety_esh_files> eng_safety_esh_files { get; set; }
        public virtual DbSet<eng_safety_hazard_list> eng_safety_hazard_list { get; set; }
        public virtual DbSet<eng_safety_insp_detail> eng_safety_insp_detail { get; set; }
        public virtual DbSet<eng_safety_insp_master> eng_safety_insp_master { get; set; }
        public virtual DbSet<eng_safety_master> eng_safety_master { get; set; }
        public virtual DbSet<eng_safety_ppe_list> eng_safety_ppe_list { get; set; }
        public virtual DbSet<eng_safety_worker_list> eng_safety_worker_list { get; set; }
        public virtual DbSet<eng_screens> eng_screens { get; set; }
        public virtual DbSet<eng_store_master> eng_store_master { get; set; }
        public virtual DbSet<eng_supplier_master> eng_supplier_master { get; set; }
        public virtual DbSet<eng_sys_claimtype> eng_sys_claimtype { get; set; }
        public virtual DbSet<eng_sys_country> eng_sys_country { get; set; }
        public virtual DbSet<eng_sys_function> eng_sys_function { get; set; }
        public virtual DbSet<eng_sys_industry> eng_sys_industry { get; set; }
        public virtual DbSet<eng_sys_location> eng_sys_location { get; set; }
        public virtual DbSet<eng_sys_project_status> eng_sys_project_status { get; set; }
        public virtual DbSet<eng_sys_ptw_stage1_config> eng_sys_ptw_stage1_config { get; set; }
        public virtual DbSet<eng_sys_ptw_stages> eng_sys_ptw_stages { get; set; }
        public virtual DbSet<eng_sys_pymt_status> eng_sys_pymt_status { get; set; }
        public virtual DbSet<eng_sys_quotestatus> eng_sys_quotestatus { get; set; }
        public virtual DbSet<eng_sys_riskmatrix> eng_sys_riskmatrix { get; set; }
        public virtual DbSet<eng_sys_rm_likelihood> eng_sys_rm_likelihood { get; set; }
        public virtual DbSet<eng_sys_rm_severity> eng_sys_rm_severity { get; set; }
        public virtual DbSet<eng_sys_safety_hazard> eng_sys_safety_hazard { get; set; }
        public virtual DbSet<eng_sys_safety_insp_items> eng_sys_safety_insp_items { get; set; }
        public virtual DbSet<eng_sys_safety_ppelist> eng_sys_safety_ppelist { get; set; }
        public virtual DbSet<eng_sys_task_status> eng_sys_task_status { get; set; }
        public virtual DbSet<eng_time_entry> eng_time_entry { get; set; }
        public virtual DbSet<eng_transport_master> eng_transport_master { get; set; }
        public virtual DbSet<eng_usergroup> eng_usergroup { get; set; }
        public virtual DbSet<eng_users> eng_users { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<DB_Company_Result> DB_Company(Nullable<int> repType)
        {
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("repType", repType) :
                new ObjectParameter("repType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_Company_Result>("DB_Company", repTypeParameter);
        }
    
        public virtual ObjectResult<DB_Director_Project_Result> DB_Director_Project(Nullable<int> repType)
        {
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("repType", repType) :
                new ObjectParameter("repType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_Director_Project_Result>("DB_Director_Project", repTypeParameter);
        }
    
        public virtual ObjectResult<DB_Emp_Result> DB_Emp(Nullable<int> repType)
        {
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("repType", repType) :
                new ObjectParameter("repType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_Emp_Result>("DB_Emp", repTypeParameter);
        }
    
        public virtual ObjectResult<DB_Operation_Result> DB_Operation(Nullable<int> groupID, Nullable<int> userID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_Operation_Result>("DB_Operation", groupIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DB_Payable_Result> DB_Payable(Nullable<int> repType)
        {
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("repType", repType) :
                new ObjectParameter("repType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_Payable_Result>("DB_Payable", repTypeParameter);
        }
    
        public virtual ObjectResult<DB_Receivable_Result> DB_Receivable(Nullable<int> repType)
        {
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("repType", repType) :
                new ObjectParameter("repType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_Receivable_Result>("DB_Receivable", repTypeParameter);
        }
    
        public virtual ObjectResult<DB_SVMan_DTTR_Result> DB_SVMan_DTTR(Nullable<int> groupID, Nullable<int> userID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_SVMan_DTTR_Result>("DB_SVMan_DTTR", groupIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DB_SVMan_Project_Result> DB_SVMan_Project(Nullable<int> groupID, Nullable<int> userID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_SVMan_Project_Result>("DB_SVMan_Project", groupIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DB_SVMan_Quality_Result> DB_SVMan_Quality(Nullable<int> groupID, Nullable<int> userID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_SVMan_Quality_Result>("DB_SVMan_Quality", groupIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DB_Vehicle_Result> DB_Vehicle(Nullable<int> repType)
        {
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("repType", repType) :
                new ObjectParameter("repType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DB_Vehicle_Result>("DB_Vehicle", repTypeParameter);
        }
    
        public virtual ObjectResult<getProjectReport_Result> getProjectReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProjectReport_Result>("getProjectReport");
        }
    
        public virtual ObjectResult<GetStock_Result> GetStock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStock_Result>("GetStock");
        }
    
        public virtual ObjectResult<getTimeReport_Result> getTimeReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTimeReport_Result>("getTimeReport");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TimeEntry_Result> TimeEntry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimeEntry_Result>("TimeEntry");
        }
    }
}
