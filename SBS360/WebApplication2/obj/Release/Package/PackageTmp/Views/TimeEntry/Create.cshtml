@model Eng360Web.Models.ViewModel.TimeEntryViewModel

@{
    Layout = null;
}
<link href="~/Content/jquery.multiselect.css" rel="stylesheet" />
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />


<style>
    .table-condensed tbody > tr > td > a {
        color: #4eb1ba !important;
    }

    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }

    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .multi {
        width: 100%;
        text-align: left;
        font-size: 10px;
        display: inline-block;
    }

   
    .ui-widget-content .ui-state-hover, .ui-widget-header .ui-state-hover, .ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus {
        background: none;
        border: none;
        color: inherit;
    }
    
    .ui-multiselect-menu {
        display: none;
        padding: 3px;
        position: absolute;
        z-index: 10000;
        text-align: left;
    }

    .ui-autocomplete {
        z-index: 10000;
    }

    .ui-multiselect {
        padding: 2px 0 2px 4px;
        width: 100%;
        text-align: left;
    }

    .ui-multiselect-filter,
    .ui-multiselect-filter input {
        font-size: 14px;
        height: auto;
        width: auto;
    }

    .ui-multiselect-checkboxes > li > label > span {
        margin-left: 5px;
    }

    .ui-multiselect-checkboxes label {
        padding: 5px 5px 5px 5px;
        margin: 0px;
        border: none;
    }

    .highlighted {
        color: #261F1D;
        background-color: #E5C37E;
    }

    .ui-widget-content {
        font-size: 14px;
    }

    .ui-progressbar {
        height: 4em;
    }

    ul.ui-multiselect-checkboxes {
        -webkit-padding-start: 0px;
    }

    .ui-corner-all {
        font-weight: normal;
        background: #fff !important;
    }
</style>


<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">

            <div class="panel-heading">
                <b> Add Time Entry  </b>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>

            <!-- /.panel-heading -->
            <div class="panel-body">

                <div class="modal-body">
                    @using (Html.BeginForm("Create", "TimeEntry", FormMethod.Post, new { role = "form", id = "timeentryForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="row" style="padding:10px;">
                                @*<div class="col-md-6">
                                        @Html.LabelFor(model => model.EmpID, "Employee Name", htmlAttributes: new { @class = "control-label required" })
                                        <div class="">
                                            @Html.DropDownList("EmpID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.EmpID, "Employee Name", htmlAttributes: new { @class = "control-label required" })
                                    <div class="">
                                        @Html.DropDownList("EmpID", null, htmlAttributes: new { @class = "form-control"})

                                       @* @Html.DropDownList("EmpID", null, htmlAttributes: new { @class = "form-control", @multiple = "multiple" })
                                           *@
                                    </div>
                                    <input type="hidden" id="SelectedEmpList" name="SelectedEmpList" />
                                </div>



                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.ProjectID, "Project Name", htmlAttributes: new { @class = "control-label required" })
                                    <div class="">
                                        @Html.DropDownList("ProjectID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                @*<div class="col-md-6">
                                        @Html.LabelFor(model => model.ReportDate, "Start Date", htmlAttributes: new { @class = "control-label required" })
                                        <div class="">
                                            @Html.EditorFor(model => model.ReportDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ReportDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        @Html.LabelFor(model => model.ReportDate, "End Date", htmlAttributes: new { @class = "control-label required" })
                                        <div class="">
                                            @Html.EditorFor(model => model.ReportEndDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ReportEndDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@


                                <div class="col-md-6" style="padding-top: 10px;">
                                    @Html.LabelFor(model => model.Work_Start_Time, "Work Start Time", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Work_Start_Time, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Work_Start_Time, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6" style="padding-top: 10px;">
                                    @Html.LabelFor(model => model.Work_End_Time, "Work End Time", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.EditorFor(model => model.Work_End_Time, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Work_End_Time, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.Leave, "Leave", htmlAttributes: new { @class = "control-label" })
                                    <div>
                                        @Html.DropDownListFor(model => model.Leave, new SelectList(
                                    new List<Object>{
                                    new { value = 0 , text = "Select"  },
                                    new { value = 1 , text = "Annual Leave" },
                                    new { value = 2 , text = "Medical Leave" },
                                    new { value = 3 , text = "Other Leaves" }

                            }, "value", "text", 0), htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Leave, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="col-md-6" style="padding-top: 10px;">
                                    @Html.LabelFor(model => model.WEHflag, "Week End/Public Holiday", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.CheckBoxFor(model => model.WEHflag, new { htmlAttributes = new { @class = "form-control" } })

                                    </div>
                                </div>

                                <div class="col-md-6" style="padding-top: 10px;">
                                    @Html.LabelFor(model => model.LBflag, "Lunch Break(Uncheck to Include)", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.CheckBoxFor(model => model.LBflag, new { htmlAttributes = new { @class = "form-control" } })

                                    </div>
                                </div>




                                @*<div class="col-md-6">
                                        @Html.LabelFor(model => model.Ot_Start_Time, htmlAttributes: new { @class = "control-label" })
                                        <div class="">
                                            @Html.EditorFor(model => model.Ot_Start_Time, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Ot_Start_Time, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        @Html.LabelFor(model => model.Ot_End_Time, htmlAttributes: new { @class = "control-label" })
                                        <div class="">
                                            @Html.EditorFor(model => model.Ot_End_Time, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Ot_End_Time, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                            </div>

                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })
                                <div class="">
                                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>

                        <div class="modal-footer">
                            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>

                            <button type="button" id="create-timeentry-dialog-save" class="btn btn-primary">Add</button>

                        </div>


                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    
    $(function () {
        $('#LBflag').prop('checked', true);

        //$('#ReportDate').datetimepicker({ format: 'DD/MM/YYYY', maxDate: new Date() });

        //$('#ReportEndDate').datetimepicker({ format: 'DD/MM/YYYY', maxDate: new Date() });

        //$('#Work_Start_Time').datetimepicker({format: 'LT'});
        //$('#Work_End_Time').datetimepicker({
        //    format: 'LT',
        //    useCurrent: false //Important! See issue #1075
        //});

        $(document).on('focusin', '#Work_Start_Time', function () {

            $(this).datetimepicker({
                format: 'YYYY/MM/DD HH:mm', maxDate: new Date(),
                sideBySide: true
            });
        });

        $(document).on('focusin', '#Work_End_Time', function () {

            $(this).datetimepicker({
                format: 'YYYY/MM/DD HH:mm', maxDate: new Date(),
                sideBySide: true
            });
        });

        //$("#Work_Start_Time").on("dp.change", function (e) {
        //    $('#Work_End_Time').data("DateTimePicker").minDate(e.date);
        //});

        //$("#Work_End_Time").on("dp.change", function (e) {
        //    $('#Work_Start_Time').data("DateTimePicker").maxDate(e.date);
        //});


        //$('#Ot_Start_Time').datetimepicker({ format: 'LT' });
        //$('#Ot_End_Time').datetimepicker({
        //    format: 'LT',
        //    useCurrent: false //Important! See issue #1075
        //});
        //$("#Ot_Start_Time").on("dp.change", function (e) {
        //    $('#Ot_End_Time').data("DateTimePicker").minDate(e.date);
        //});

        //$("#Ot_End_Time").on("dp.change", function (e) {
        //    $('#Ot_Start_Time').data("DateTimePicker").maxDate(e.date);
        //});


    });
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");

    $("#EmpID").multiselect({
        header: false,
        height: "260px",
        noneSelectedText: 'Select employees',
        selectedText: '# employee(s) selected',
        open: function () {
            debugger;
            var top;
            //top = gettop(); //
            top = parseInt($('.ui-multiselect-menu').css('top'), 10);
            top = top + "px";
            $('.ui-multiselect-menu').css('top', top);
            //$('.ui-multiselect-menu').css('width', $("button.ui-multiselect").css("width"));
            $('.ui-multiselect-menu').css('width', $("button.ui-multiselect.ui-widget.ui-state-default.ui-corner-all.ui-state-hover.ui-state-active").css("width"));
            $('.ui-multiselect-menu').css('height', '250px');
            $('.ui-multiselect-checkboxes').css('height', '250px');
            $('.ui-multiselect-checkboxes').css('overflow', 'auto');


            $(this).multiselect("getChecked").each(function (index, item) {
                $(item).parent().parent().addClass("categoryLabelsSelected");
            });
        },
        optgrouptoggle: function (event, ui) {
            var values = $.map(ui.inputs, function (checkbox) {
                if ($(checkbox).attr("aria-selected") == "true")
                    $(checkbox).parent().parent().addClass("categoryLabelsSelected");
                else
                    $(checkbox).parent().parent().removeClass("categoryLabelsSelected");
                return checkbox.value;
            }).join(", ");
        },
        click: function (event, ui) {

            if (ui.checked == true)
                $(event.currentTarget).parent().parent().addClass("categoryLabelsSelected");
            else
                $(event.currentTarget).parent().parent().removeClass("categoryLabelsSelected");

        },
        close: function () {
            var values = new Array();
            var names = new Array();
            $(this).multiselect("getChecked").each(function (index, item) {
                values.push($(item).val());

            });
            $("#SelectedEmpList").val(values.join(",")); // This the hidden field which send to server
        }
    });


</script>