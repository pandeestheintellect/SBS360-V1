@model Eng360Web.Models.ViewModel.MMInwardViewModel

@{
    Layout = null;
    //  ViewBag.TermsAndCond = "TERMS & CONDITIONS : \n PRICE: All in Singapore dollars \n VALIDITY: Two Month from dated this quotation \n DELIVERY    : One week from upon order confirmation \n PAYMENT: 30 days from the date of invoice \n NOTE: Any others work NOT mentioned here will be additional charged.";

}

<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

<style>
    .table-condensed tbody > tr > td > a {
        color: #4eb1ba !important;
    }

    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>


<div class="row inner-page--container">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b> Add New Inward  </b>

                @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>*@
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">


                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "inwardForm" }))
                {
                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    
                    <div class="row">

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Received_Date, htmlAttributes: new { @class = "control-label required" }) 
                            @Html.ValidationMessageFor(model => model.Received_Date, "", new { @class = "text-danger" })
                            <div>
                                @Html.EditorFor(model => model.Received_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                            </div>
                        </div>


                      
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.StoreID, htmlAttributes: new { @class = "control-label required" }) 
                            @Html.ValidationMessageFor(model => model.StoreID, "", new { @class = "text-danger" })
                            <div>
                                @Html.DropDownList("StoreID", null, htmlAttributes: new { @class = "form-control" })

                            </div>
                        </div>

                        

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Branch_Name, "Company Name", htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.Branch_Name, "", new { @class = "text-danger" })
                            <div>
                                @Html.DropDownListFor(model => model.Branch_Name, new SelectList(
                                    new List<Object>{
                                    new { value = "City Construction Eng Pte Ltd" , text = "City Construction Eng Pte Ltd"  }

                                    }, "value", "text", 1), htmlAttributes: new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                            <div>
                                @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Receipt_Type, "Receipt Type", htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.Receipt_Type, new SelectList(
                                    new List<Object>{
                                    new { value = 1 , text = "Purchase Order"  },
                                    new { value = 2 , text = "Transfer Order" },
                                    new { value = 3 , text = "Return Order" },
                                    new { value = 4 , text = "Material Request" },
                                    new { value = 5 , text = "Miscellaneous" }

                    }, "value", "text", 1), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Receipt_Type, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Invoice_or_DO_Number, "Invoice/DO Number", htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.Invoice_or_DO_Number, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Invoice_or_DO_Number, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Invoice_or_DO_Date, "Invoice/DO Date", htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.EditorFor(model => model.Invoice_or_DO_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Invoice_or_DO_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ReceivedBy, htmlAttributes: new { @class = "control-label required" })
                            @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
                            <div>
                                @Html.DropDownList("ReceivedBy", null, htmlAttributes: new { @class = "form-control" })

                            </div>
                        </div>

                        <div class="col-md-11">
                            &nbsp;
                            <div>
                                &nbsp;

                            </div>
                        </div>

                        <div class="col-md-11">
                            
                            <table width="95%" border="1">
                                <tr>


                                    <td><span style="font-size:16px; font-weight:bold;">Product Code </span> </td>
                                    <td><span style="font-size:16px; font-weight:bold;">ProductID</span></td>  
                                    <td><span style="font-size:16px; font-weight:bold;">Description</span></td>  
                                    <td><span style="font-size:16px; font-weight:bold;">UoM </span></td>                                  
                                    <td><span style="font-size:16px; font-weight:bold;">Quantity </span></td>
                                    
                                    <td><span style="font-size:16px; font-weight:bold;">Remarks</span></td>


                                </tr>

                                <tr>


                                    <td>@Html.EditorFor(model => model.Product_Code, new { htmlAttributes = new { onchange = "OnProductEntry(this)", @class = "form-control" } }) </td>
                                    <td>@Html.EditorFor(model => model.PID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } }) </td>
                                    <td>@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } }) </td>
                                    <td>@Html.EditorFor(model => model.UOM, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } }) </td>
                                    <td>@Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } }) </td>
                                    
                                    <td>@Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } }) </td>
                                    


                                </tr>



                                </table>


</div>

                        </div>

                        
                    <div class="col-md-12" style="min-height:300px !important;padding-top:25px;padding-left:0px;padding-right:0px;">

                        <table class="table table-striped table-bordered" id="tableInwardDesc">

                            <thead>
                                <tr>
                                    <th>Product Code</th>
                                    <th>ProductID</th>
                                    <th>Description</th>
                                    
                                    <th>UoM</th>
                                    <th>Quantity</th>
                                    <th>Remarks</th>
                                    
                                    <th>Actions</th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr class="remove">
                                    <td>sdsd</td>
                                    <td>sds</td>
                                    <td>sdas</td>
                                    <td>sds</td>
                                    <td>sds</td>
                                    <td>sds</td>
                                    <td>kdsd</td>
                                </tr>

                            </tbody>

                        </table>

                    </div>



                }

            </div>
            <div class="modal-footer">
                
                
                <input type="button" value="Save Draft" id="create-inwardDraft-dialog-save" style="float:right" class="btn btn-primary" /><span style="float:right">&nbsp;</span>
                <input type="button" value="Create" id="create-inward-dialog-save" style="float:right" class="btn btn-primary" /><span style="float:right">&nbsp;</span><input type="button" value="Back" id="create-inward-back" style="float:right" class="btn btn-primary Inward" />
            </div>
        </div>
    </div>
</div>

<script>

    var dataAsJsonString = {};
    $(function () {
       

        $('#Received_Date').datetimepicker({ format: 'DD/MM/YYYY', defaultDate: new Date() });

        $('#Invoice_or_DO_Date').datetimepicker({ format: 'DD/MM/YYYY' });

        $.post("Product/getAllProducts",{@Html.AntiForgeryTokenForAjaxPost()},function (data){
            dataAsJsonString = JSON.stringify(data);

            //$.each(data, function (index, item) {
            //    pdtTags.push(item)
            //})
           
        });
        
       
    });

 


    var contacts = [];

                    var inwdescTable;
                    $(document).ready(function () {

                        inwdescTable = $('#tableInwardDesc').DataTable({
                            "autoWidth": true,
                            dom: 'Brti',
                            buttons: [
                                'copyHtml5',
                                'excelHtml5',
                                'csvHtml5',
                                'pdfHtml5',

                            ],
                            "columnDefs": [
                        {
                            // The `data` parameter refers to the data for the cell (defined by the
                            // `data` option, which defaults to the column being worked with, in
                            // this case `data: 0`.
                            "render": function (data, type, row) {
                               // return '<a class="btn" onclick="removeDataFromDT(this)"> <img src="Content/images/delete.png" /> </a>';
                                return '<a class="btn" onclick="removeDataFromDT(this)" title="Delete InwardDescription" style="padding: 0px 0px;"> <i class="fa fa-trash" aria-hidden="true" style="color:orangered;font-size:20px"></i> </a>';
                            },
                            "targets": 6
                        }]
                        });

                       
                    });

                    var column = inwdescTable.column(1);
                    column.visible(false);

                    $('.dt-buttons').prepend('<a style="margin-bottom:10px;"  onclick="addDataToDataTable()" class="dt-button  buttons-html5" tabindex="0" aria-controls="inwdescTable" href="#"><span>Add Products</span></a>')
                    $('.dt-button').addClass('btn btn-primary').removeClass('dt-button').css('margin-right', '5px')
                    $('.buttons-copy').css('display', 'none');
                    $('.buttons-excel').css('display', 'none');
                    $('.buttons-csv').css('display', 'none');
                    $('.buttons-pdf').css('display', 'none');
                    inwdescTable.row('.remove').remove().draw(false);

                    


                    function removeDataFromDT(btn) {

                        $(btn.closest('tr')).addClass('remove')
                        inwdescTable.row('.remove').remove().draw(false);
                       
                    }

                    function OnProductEntry(val) {
                        
                        debugger;
                        var pdc = $("#Product_Code").val();
                        var lk = $.parseJSON(dataAsJsonString);
                        var x = 0;
                        $.each(lk, function (k, v) {
                            if (v.Product_Code == pdc) {
                                // alert(k + ' is ' + v.Product_Name);
                                $("#Description").val(v.Product_Description);
                                $("#UOM").val(v.Measuring_Unit);
                                $("#PID").val(v.ProductID);
                                x = 1;
                                return;
                            }

                        });
                        if (x == 0) {
                            $("#Product_Code").val('');
                            $("#Description").val('');
                            $("#UOM").val('');
                            $("#PID").val('');
                            $("#Remarks").val('');
                            alert('Product is not available!')
                        }


                    }

                    function addDataToDataTable() {
                        
                        var pdt = $('#Product_Code').val().trim();
                            var qty = parseInt($('#Qty').val().trim());
                            var uom = $('#UOM').val().trim();
                            var desc = $('#Description').val().trim();
                            var rem = $('#Remarks').val().trim();
                            var pid = $('#PID').val().trim();

                            debugger;
                            if (pdt == null || pdt == '')
                            {
                               return;
                            }
                            if (qty > 0) {
                                inwdescTable.row.add([pdt, pid, desc, uom, qty, rem]).draw(false)
                                $("#Product_Code").val('');
                                $("#Description").val('');
                                $("#UOM").val('');
                                $("#Qty").val('0');
                                $("#PID").val('');
                                $("#Remarks").val('');
                            }
                            else {
                                alert('Pls enter Quantity > 0 value');
                            }
                      
                    }
    
    

</script>
