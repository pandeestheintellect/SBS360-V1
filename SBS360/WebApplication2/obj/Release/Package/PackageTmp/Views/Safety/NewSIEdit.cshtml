@model Eng360Web.Models.ViewModel.NewSafetyInspectionViewModel

@{
    Layout = null;
}
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />
<script src="~/Scripts/tagit/tag-it.js"></script>
<link href="~/Content/tagit/jquery.tagit.css" rel="stylesheet" />

<style>
    .table-condensed tbody > tr > td > a {
        color: #4eb1ba !important;
    }

    .ui-front {
        z-index: 9999 !important;
    }

    .ui-autocomplete {
        max-height: 10em !important;
        overflow: auto !important;
    }

    .ui-menu-item {
        max-width: 280px !important;
    }

    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">

            <div class="panel-heading">
                <b> Edit Safety Inspection  </b>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formNewSafetyInspectionEdit" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.NSIID);
                    @Html.HiddenFor(model => model.FileCaption);
                    @Html.HiddenFor(model => model.FileName);
                    @Html.HiddenFor(model => model.FilePath);
                    @Html.HiddenFor(model => model.CreatedBy);
                    @Html.HiddenFor(model => model.CreatedDate);

                    <div class="row">

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ProjectID, "Project Name", htmlAttributes: new { @class = "control-label required" })
                            <div>
                                @Html.DropDownList("ProjectID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ProjectLocation, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.ProjectLocation, new { htmlAttributes = new { @class = "form-control required" } })
                                @Html.ValidationMessageFor(model => model.ProjectLocation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.InspectionDate, htmlAttributes: new { @class = "control-label required" })
                            <div class="">
                                @Html.EditorFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control", @Value = Convert.ToDateTime(Model.InspectionDate).ToString("dd/MM/yyyy") } })
                                @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.InspectedBy, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @*@Html.EditorFor(model => model.InspectedBy, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.DropDownListFor(model => model.InspectedBy, new SelectList(ViewBag.MNGList, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.InspectedBy, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>


                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Observation, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.TextAreaFor(model => model.Observation, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Observation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.RemedialAction, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.TextAreaFor(model => model.RemedialAction, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RemedialAction, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>


                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ActionBy_Deadline, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.ActionBy_Deadline, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ActionBy_Deadline, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Rectification_Remarks, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.TextAreaFor(model => model.Rectification_Remarks, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Rectification_Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                                <div class="">
                                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-md-6">
                                @Html.LabelFor(model => model.files, htmlAttributes: new { @class = "control-label" })
                                <div class="">
                                    @Html.TextBoxFor(model => model.files, "", new { @type = "file", @accept = "image/x-png,image/gif,image/jpeg" })
                                    @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">

                            <div class="">
                                &nbsp;
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-10">

                                <table class="table table-striped table-bordered" id="tableFiles">

                                    <thead>
                                        <tr>
                                            <th>File Name</th>
                                            <th>Image</th>
                                            <th>Action</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.FilePath != null)
                                        {
                                            <tr id="@Model.NSIID">

                                                <td>
                                                    @Model.FileName
                                                </td>
                                                <td>
                                                    <a href="@Model.FilePath" target="_blank">
                                                        <img src="@Model.FilePath" height="20" width="20" />
                                                    </a>
                                                </td>
                                                <td></td>

                                            </tr>
                                        }
                                    </tbody>

                                </table>

                            </div>
                        </div>


                        <div class="modal-footer">
                            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                            <input type="button" value="Save" id="edit-newsafetyinspection-dialog-save" class="btn btn-primary" />

                        </div>
                        }


                    </div>
                </div>
    </div>
</div>

<script type="text/javascript">
   
    var contactTable;
    $(document).ready(function () {
        debugger;
        contactTable = $('#tableFiles').DataTable({
            dom: 'Brti',
            
            "columnDefs": [
        {
            
            "render": function (data, type, row) {
                
                return '<a class="btn" onclick="removeDataFromDT(this)" title="Delete File" style="padding: 0px 0px;"> <i class="fa fa-trash" aria-hidden="true" style="color:orangered;font-size:24px"></i> </a>';
            },

            "targets": 2
        }],
            buttons: [
           {             
               
           }
            ]
        });
    });
    $('.dt-button').css('display', 'none');

    //$('.dt-buttons').prepend('<a  onclick="CreateContact()" class="dt-button  buttons-html5" tabindex="0" aria-controls="emplyeeTable" href="#"><span>Add Contacts</span></a>')
   
    



    function removeDataFromDT(btn) {
        debugger;
        var id = btn.closest('tr').id;
        $(btn.closest('tr')).addClass('remove')
        DeleteSafetyFile(id);
        //contactTable.row('.remove').remove().draw(false);

    }


    $(function () {
        $('#InspectionDate').datetimepicker({ format: 'DD/MM/YYYY' }); 
    });

    function DeleteSafetyFile(id)
    {

        confirmDialogYesorNo("Are you sure to delete this File?", DeleteSafetyFileConfirmed, null, id)
    }

    function DeleteSafetyFileConfirmed(id)
    {
       
        $.post("Safety/DeleteSafetyFile/", { id: id, @Html.AntiForgeryTokenForAjaxPost() }, function (data) {
            if (data.value == "OK") {
                //removeDataFromDT(btn);
                contactTable.row('.remove').remove().draw(false);
                return;
            }
            else {
                alertDialog("Delete File failed")
            }
        });
    }


</script>