@model Eng360Web.Models.ViewModel.ClientViewModel

@{
    Layout = null;
}




<div class="row inner-page--container">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b> Edit Client  </b>

                @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>*@
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "clientEditForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col-md-6" style="padding-left:0px">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ClientID)

                        @Html.HiddenFor(model => model.AddressID)
                        @Html.HiddenFor(model => model.IsActive)
                        @Html.HiddenFor(model => model.CreatedDate)
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.HiddenFor(model => model.eng_address_master.AddressID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.ClientDisplayID, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.ClientDisplayID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.ClientDisplayID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Company_Name, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Company_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.IndustryID, "IndustryID", htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.DropDownList("IndustryID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IndustryID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FunctionalityID, "FunctionalityID", htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.DropDownList("FunctionalityID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FunctionalityID, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
                            </div>
                        </div>



                    </div>
                    <div class="col-md-6" style="min-height:300px !important;">
                        <table class="table table-striped table-bordered" id="tableContacts">
                            <thead>
                                <tr>
                                    <th>Prefix</th>
                                    <th>Contact Name</th>
                                    <th>Email</th>
                                    <th>Mobile</th>
                                    <th>Tel</th>
                                    <th>track</th>
                                    <th>Actions</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var obj in Model.eng_client_contact)
                                {
                                    <tr id="@obj.CCID">
                                        <td>
                                            @obj.NamePrefix
                                        </td>
                                        <td>
                                            @obj.SPOCName
                                        </td>
                                        <td>
                                            @obj.Email
                                        </td>
                                        <td>
                                            @obj.Mobile
                                        </td>
                                        <td>@obj.Tel</td>
                                        <td>-1</td>
                                        <td></td>
                                    </tr>
                                }
                            </tbody>

                        </table>

                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Email, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Mobile, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Tel, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Tel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Tel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Web, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Web, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Web, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Address1, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Address1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Address2, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Address2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.City, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Country, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Postal_Code, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Postal_Code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Postal_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Fax1, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Fax1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Fax1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.SkypeID, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.SkypeID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.SkypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Remarks, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    



                }
            </div>
            <div class="modal-footer">

                <button type="button" id="create-clientEdit-dialog-save" style="float:right" class="btn btn-primary">Save</button><span style="float:right">&nbsp;</span><input type="button" value="Back" id="create-client1-dialog1-back1" style="float:right" class="btn btn-primary Client" />
            </div>
        </div>
    </div>
</div>

<script>
    var contacts = [];
    var deleteIDs = [];
    var contactTable;
    $(document).ready(function () {
        debugger;
        contactTable = $('#tableContacts').DataTable({
            "autoWidth": true,
            "scrollX": true,
            dom: 'Brti',
            buttons: [
                'copyHtml5',
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5',

            ],
            "columnDefs": [
        {
            // The `data` parameter refers to the data for the cell (defined by the
            // `data` option, which defaults to the column being worked with, in
            // this case `data: 0`.
            "render": function (data, type, row) {
               //return '<a class="btn" onclick="removeDataFromDT(this)"> <img src="Content/images/delete.png" /> </a>';
                return ' <a class="btn" title="Edit Contacts"  onclick="EditContact(this)"> <i class="fa fa-pencil" aria-hidden="true" ></i>   </a><a class="btn" onclick="removeDataFromDT(this)" title="Delete ClientContact" > <i class="fa fa-trash" aria-hidden="true" ></i> </a>';
            },
            "targets": 6
        }]
        });
    });

    var column = contactTable.column(5);
    var column1 = contactTable.column(6);
    debugger;
    column.visible(false);
    
    $('.dt-button').addClass('btn btn-primary').removeClass('dt-button').css('margin-right', '5px')
    $('.buttons-copy').css('display', 'none');
    $('.buttons-excel').css('display', 'none');
    $('.buttons-csv').css('display', 'none');
    $('.buttons-pdf').css('display', 'none');

    function EditContact(btn) {
        debugger;
        var id = btn.closest('tr').id;
        $(btn.closest('tr')).addClass('selectedRow')
        CreateClientContactEdit(id);
    }

    function removeDataFromDT(btn) {

        $(btn.closest('tr')).addClass('remove')

        deleteIDs.push(btn.closest('tr').id);
        debugger;
        contactTable.row('.remove').remove().draw(false);

    }


    $('.dt-buttons').prepend('<a  onclick="CreateContact()" class="dt-button  buttons-html5" tabindex="0" aria-controls="emplyeeTable" href="#"><span>Add Contacts</span></a>')
    $('.dt-button').addClass('btn btn-primary').removeClass('dt-button').css('margin-right', '5px')
    $('.buttons-copy').css('display', 'none');
    $('.buttons-excel').css('display', 'none');
    $('.buttons-csv').css('display', 'none');
    $('.buttons-pdf').css('display', 'none');
    //    contactTable.row('.remove').remove().draw(false);

    function EditContact(btn) {
        debugger;
        var id = btn.closest('tr').id;
        $(btn.closest('tr')).addClass('selectedRow')
        CreateClientContactEdit(id);
    }

   
    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");

</script>
