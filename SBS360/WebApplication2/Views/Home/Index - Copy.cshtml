@model Eng360Web.Models.ViewModel.IndexViewModel
@{
    ViewBag.Title = "Eng360";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@Scripts.Render("~/bundles/bootstrap")

<div id="leftMenu" class="navbar-default sidebar" role="navigation">

    <!-- /.sidebar-collapse -->
</div>
<!-- /.navbar-static-side -->
<div id="page-wrapper" style="min-height:800px;">

    <div class="row">

        <div class="col-lg-12">
            @*<h1 style="text-align:center; color: navy; font-family: 'Arial Rounded MT'; font-weight: bolder; font-size: 48px; padding-top:2px !important">
                Dashboard</h1>*@
        </div>
        <!-- /.col-lg-12 -->
    </div>

    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 1 || Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 5)
    {
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-primary">
                    <div class="panel-heading blue">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-file-text fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">
                                    @Model.OpenQuoteCount
                                </div>
                                <div>Open Quotations!</div>
                            </div>
                        </div>
                        <a href="#" class="small-box-footer Dash-Quotations">More info<i class="fa fa-arrow-circle-right"></i></a>
                    </div>


                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-green">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-tasks fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">

                                    @Model.DB_Operation.Count
                                </div>
                                <div>Ongoing Projects!</div>
                            </div>
                        </div>
                        <a href="#" class="small-box-footer Dash-Project">More info<i class="fa fa-arrow-circle-right"></i></a>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-yellow">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-money fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">
                                    @Model.DB_Receivable.Count
                                </div>
                                <div>Pending Invoices!</div>
                            </div>
                        </div>
                        <a href="#" class="small-box-footer Dash-Invoice">More info<i class="fa fa-arrow-circle-right"></i></a>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-red">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-credit-card-alt fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge">
                                    @Model.DB_Emp.Count
                                </div>
                                <div>License Expiry!</div>
                            </div>
                        </div>
                        <a href="#" class="small-box-footer Dash-Employee">More info<i class="fa fa-arrow-circle-right"></i></a>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.row -->

        <!-- /.row -->
        <div class="row table-container">
            <div class="col-lg-12">

                <div class="table-wrapper">
                    <div class="panel panel-default">
                        <div class="panel-heading green">
                            <span class="title">
                                <i class="fa fa-tasks fa-fw"></i> Day to Day Operations
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div id="morris-area-chart">

                                <table width="100%" class="table table-bordered" id="DBDOperationTable">
                                    <thead class="tablehead green">
                                        <tr>
                                            <th align="center" width="12%">
                                                Project No
                                            </th>

                                            <th align="center" width="40%">
                                                Project Name
                                            </th>

                                            <th align="center" width="12%">
                                                Project Report
                                            </th>

                                            <th align="center" width="12%">
                                                Task Status
                                            </th>

                                            <th align="center" width="12%">
                                                Time Entry
                                            </th>

                                            <th align="center" width="12%">
                                                Expense Entry
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Operation)
                                        {

                                            <tr>
                                                <td>
                                                    @item.ProjectNo
                                                </td>
                                                <td>
                                                    @item.ProjectName
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.PR).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {

                                                        }
                                                    }
                                                    @dt


                                                </td>

                                                <td>
                                                    @item.TaskStatus
                                                </td>

                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.TE).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {
                                                            dt = "Not Submitted";

                                                        }
                                                    }
                                                    @dt


                                                </td>

                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.EE).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {
                                                            dt = "Not Claimed";

                                                        }
                                                    }
                                                    @dt

                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>

                </div>
            </div>
        </div>
        <!-- /.row -->

        <!-- /.row -->
        <div class="row table-container">
            <div class="col-lg-6">
                <div class="table-wrapper">
                    <div class="panel panel-default">
                        <div class="panel-heading blue">
                            <span class="title">
                                <i class="fa fa-user fa-fw"></i> Employee
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div id="morris-area-chart">
                                <table width="100%" class="table table-bordered" id="DBDHREmpTable" style=" min-height: 335px;">
                                    <thead class="tablehead blue">
                                        <tr>
                                            <th>
                                                Employee Name
                                            </th>
                                            <th>
                                                Permit/License
                                            </th>

                                            <th>
                                                Expiry Date
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Emp)
                                        {
                                            var name = "";
                                            <tr>
                                                <td>
                                                    @{
                                                        name = item.FirstName + " " + item.LastName;

                                                    }
                                                    @name
                                                </td>
                                                <td>
                                                    @item.ExpiryType
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.DateofExpiry).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt


                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="table-wrapper">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="panel panel-default">
                                <div class="panel-heading darkblue">
                                    <span class="title">
                                        <i class="fa fa-money fa-fw"></i>Receivable
                                    </span>
                                    <div class="pull-right">
                                    </div>
                                </div>
                                <!-- /.panel-heading -->
                                <div class="panel-body">
                                    <div id="morris-area-chart">

                                        <table width="100%" class="table  table-bordered" id="DBDReceivableTable" style=" max-height: 280px;">
                                            <thead class="tablehead darkblue">
                                                <tr>
                                                    <th>
                                                        Client Name
                                                    </th>
                                                    <th>
                                                        Invoice No
                                                    </th>


                                                    <th>
                                                        Invoice Date
                                                    </th>

                                                    <th>
                                                        Invoice Type
                                                    </th>

                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.DB_Receivable)
                                                {

                                                    <tr>
                                                        <td>
                                                            @item.Company_Name
                                                        </td>
                                                        <td>
                                                            @item.InvoiceNum
                                                        </td>

                                                        <td>
                                                            @{
                                                                var dt = "";
                                                                dt = Convert.ToDateTime(item.InvoiceDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                            }
                                                            @dt


                                                        </td>
                                                        <td>
                                                            @{
                                                                var dat = "";
                                                                if (item.DueDate == "COD")
                                                                {
                                                                    //dat = Convert.ToDateTime(item.InvoiceDate).AddDays(0).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                    dat = "COD";
                                                                }
                                                                if (item.DueDate == "3 Days")
                                                                {
                                                                    dat = Convert.ToDateTime(item.InvoiceDate).AddDays(3).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                }
                                                                if (item.DueDate == "7 Days")
                                                                {
                                                                    dat = Convert.ToDateTime(item.InvoiceDate).AddDays(7).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                }
                                                                if (item.DueDate == "15 Days")
                                                                {
                                                                    dat = Convert.ToDateTime(item.InvoiceDate).AddDays(15).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                }
                                                                if (item.DueDate == "30 Days")
                                                                {
                                                                    dat = Convert.ToDateTime(item.InvoiceDate).AddDays(30).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                }
                                                                if (item.DueDate == "45 Days")
                                                                {
                                                                    dat = Convert.ToDateTime(item.InvoiceDate).AddDays(45).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                }
                                                                if (item.DueDate == "60 Days")
                                                                {
                                                                    dat = Convert.ToDateTime(item.InvoiceDate).AddDays(60).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                }


                                                            }
                                                            @*@dat*@
                                                            @item.InvoiceType
                                                        </td>

                                                    </tr>
                                                }
                                            </tbody>
                                        </table>


                                    </div>
                                </div>
                                <!-- /.panel-body -->
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div>
                            <div class="col-lg-12">
                                <div class="panel panel-default">
                                    <div class="panel-heading orange">
                                        <span class="title">
                                            <i class="fa fa-credit-card fa-fw"></i>Payable
                                        </span>

                                        <div class="pull-right">
                                        </div>
                                    </div>
                                    <!-- /.panel-heading -->
                                    <div class="panel-body">
                                        <div id="morris-area-chart">

                                            <table width="100%" class="table table-bordered" id="DBDPayableTable" style=" max-height: 280px;">
                                                <thead class="tablehead orange">
                                                    <tr>
                                                        <th>
                                                            Vendor / Employee
                                                        </th>


                                                        <th>
                                                            PO / Expense Ref
                                                        </th>

                                                        <th>
                                                            Date
                                                        </th>

                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.DB_Payable)
                                                    {

                                                        <tr>
                                                            <td>
                                                                @item.Company_Name
                                                            </td>
                                                            <td>
                                                                @item.PoRefNum
                                                            </td>

                                                            <td>
                                                                @{
                                                                    var dt = "";
                                                                    dt = Convert.ToDateTime(item.PoDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                                }
                                                                @dt


                                                            </td>


                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>


                                        </div>
                                    </div>
                                    <!-- /.panel-body -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.row -->

        <!-- /.row -->
        <div class="row table-container">
            <div class="col-lg-6">
                <div class="table-wrapper">
                    <div class="panel panel-danger">
                        <div class="panel-heading compblue">
                            <span class="title">
                                <i class="fa fa-building fa-fw"></i> Company
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div id="morris-area-chart">

                                <table width="100%" class="table  table-bordered" id="DBDCompanyTable">
                                    <thead class="tablehead compblue">
                                        <tr>
                                            <th>
                                                Name
                                            </th>
                                            <th>
                                                Certificate
                                            </th>

                                            <th>
                                                Issue Date
                                            </th>

                                            <th>
                                                Expiry Date
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Company)
                                        {
                                            var name = "";
                                            <tr>
                                                <td>
                                                    @item.Company_Name
                                                </td>
                                                <td>
                                                    @item.Cert_License_Name
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.Issue_Date).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt


                                                </td>
                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.Expiry_Date).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt

                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>
                    <!-- /.panel -->
                </div>
            </div>

            <div class="col-lg-6">
                <div class="table-wrapper">
                    <div class="panel panel-danger">
                        <div class="panel-heading pink">
                            <span class="title">
                                <i class="fa fa-bus fa-fw"></i> Vehicle
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div id="morris-area-chart">

                                <table width="100%" class="table table-bordered" id="DBDVehicleTable">
                                    <thead class="tablehead pink">
                                        <tr>
                                            <th>
                                                Number
                                            </th>
                                            <th>
                                                Type
                                            </th>

                                            <th>
                                                Certificate
                                            </th>

                                            <th>
                                                Reference
                                            </th>

                                            <th>
                                                Expiry Date
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Vehicle)
                                        {

                                            <tr>
                                                <td>
                                                    @item.Vehicle_Number
                                                </td>
                                                <td>
                                                    @item.Vehicle_Type
                                                </td>
                                                <td>
                                                    @item.CertificateType
                                                </td>
                                                <td>
                                                    @item.RefNo
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.ExpiryDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt


                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>
                </div>
            </div>
        </div>
        <!-- /.row -->
    }

    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 4)
    {
        <div class="table-wrapper">
            <div class="row" style="padding: 1px;">

                <div class="col-lg-12" style="padding: 2px;">
                    <div class="panel panel-default" style="max-height: 300px;">
                        <div class="panel-heading" style="background-color: #41681b; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-tasks fa-fw"></i> Projects and Status
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 2px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table table-bordered" id="DBDDirectorProjectTable" style="background-color: goldenrod; max-height: 280px;">
                                    <thead style="background-color: #60a022; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th align="center">
                                                Project Name
                                            </th>

                                            <th align="center">
                                                Start Date
                                            </th>

                                            <th align="center">
                                                End Date
                                            </th>

                                            <th align="center">
                                                Project Status
                                            </th>

                                            <th align="center">
                                                Progress in %
                                            </th>

                                            <th align="center">
                                                Quotation Num
                                            </th>

                                            <th align="center">
                                                Quotation Status
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Director_Project)
                                        {

                                            <tr>
                                                <td>
                                                    @item.ProjectName
                                                </td>
                                                <td>
                                                    @{
                                                        decimal ctdays = 0;
                                                        decimal totdays = 0;
                                                        decimal percent = 0;

                                                        var ctdt = DateTime.Now;
                                                        var stdt = Convert.ToDateTime(item.Start_Date).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());

                                                        var eddt = Convert.ToDateTime(item.End_Date).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());

                                                        TimeSpan cdays = ctdt - Convert.ToDateTime(item.Start_Date);

                                                        ctdays = (decimal)cdays.TotalDays;



                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.Start_Date).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/0001")
                                                        {
                                                            dt = "";
                                                        }
                                                    }
                                                    @dt
                                                </td>

                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.End_Date).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/0001")
                                                        {
                                                            dt = "";
                                                        }
                                                        else
                                                        {
                                                            TimeSpan tdays = Convert.ToDateTime(item.End_Date) - Convert.ToDateTime(item.Start_Date);
                                                            totdays = (int)tdays.TotalDays;

                                                            percent = (ctdays / totdays * 100);
                                                        }
                                                    }
                                                    @dt


                                                </td>

                                                <td>
                                                    @item.ProjectStatus
                                                </td>

                                                <td>

                                                    @Math.Round(percent, 2)
                                                </td>

                                                <td>

                                                    @item.QuoteRefNum

                                                </td>
                                                <td>

                                                    @item.QuoteStatus

                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>

                </div>

            </div>
        </div>

        <div class="table-wrapper">
            <div class="row" style="padding: 1px;">

                <div class="col-lg-6" style="padding: 3px;">

                    <div class="panel panel-default" style="max-height: 350px; min-height: 350px; padding-bottom: 1px;">
                        <div class="panel-heading" style="background-color: blue; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-money fa-fw"></i>Receivable
                            </span>
                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 1px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table  table-bordered" id="DBDReceivableTable" style="background-color: lightgreen; max-height: 280px;">
                                    <thead style="background-color: #60a022; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th>
                                                Client Name
                                            </th>
                                            <th>
                                                Invoice No
                                            </th>


                                            <th>
                                                Invoice Date
                                            </th>

                                            <th>
                                                Due Date
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Receivable)
                                        {

                                            <tr>
                                                <td>
                                                    @item.Company_Name
                                                </td>
                                                <td>
                                                    @item.InvoiceNo
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.InvoiceDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt


                                                </td>
                                                <td>
                                                    @{
                                                        var dat = "";
                                                        if (item.DueDate == "COD")
                                                        {
                                                            //dat = Convert.ToDateTime(item.InvoiceDate).AddDays(0).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                            dat = "COD";
                                                        }
                                                        if (item.DueDate == "3 Days")
                                                        {
                                                            dat = Convert.ToDateTime(item.InvoiceDate).AddDays(3).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        }
                                                        if (item.DueDate == "7 Days")
                                                        {
                                                            dat = Convert.ToDateTime(item.InvoiceDate).AddDays(7).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        }
                                                        if (item.DueDate == "15 Days")
                                                        {
                                                            dat = Convert.ToDateTime(item.InvoiceDate).AddDays(15).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        }
                                                        if (item.DueDate == "30 Days")
                                                        {
                                                            dat = Convert.ToDateTime(item.InvoiceDate).AddDays(30).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        }
                                                        if (item.DueDate == "45 Days")
                                                        {
                                                            dat = Convert.ToDateTime(item.InvoiceDate).AddDays(45).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        }
                                                        if (item.DueDate == "60 Days")
                                                        {
                                                            dat = Convert.ToDateTime(item.InvoiceDate).AddDays(60).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        }


                                                    }
                                                    @dat
                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>


                    <!-- /.panel -->

                </div>

                <div class="col-lg-6" style="padding: 3px;">

                    <div class="panel panel-default" style="max-height: 350px; min-height: 350px; padding-top: 1px;">
                        <div class="panel-heading" style="background-color:#af1a16; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-credit-card fa-fw"></i>Payable
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 1px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table table-bordered" id="DBDPayableTable" style="background-color: #eeca16; max-height: 280px;">
                                    <thead style="background-color: #60a022; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th>
                                                Vendor / Employee
                                            </th>


                                            <th>
                                                PO / Expense Ref
                                            </th>

                                            <th>
                                                Date
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Payable)
                                        {

                                            <tr>
                                                <td>
                                                    @item.Company_Name
                                                </td>
                                                <td>
                                                    @item.PoRefNum
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.PoDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt


                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>
                </div>

            </div>
        </div>
    }

    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 2)
    {
        <div class="table-wrapper">
            <div class="row" style="padding-bottom: 1px; padding-top: 1px;">

                <div class="col-lg-12" style="padding: 2px;">
                    <div class="panel panel-default" style="max-height: 300px;">
                        <div class="panel-heading" style="background-color: darkkhaki; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-tasks fa-fw"></i> Projects
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 2px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table table-bordered" id="DBDSVManProjectTable" style="background-color: powderblue; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th align="center">
                                                Sl No
                                            </th>

                                            <th align="center">
                                                Project Name
                                            </th>

                                            <th align="center">
                                                Date
                                            </th>

                                            <th align="center">
                                                Task Description
                                            </th>

                                            <th align="center">
                                                Start Time
                                            </th>

                                            <th align="center">
                                                End Time
                                            </th>

                                            <th align="center">
                                                Task Status
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            var i = 0;
                                        }
                                        @foreach (var item in Model.DB_SVMan_Project)
                                        {
                                            i = i + 1;
                                            <tr>
                                                <td>
                                                    @i
                                                </td>
                                                <td>
                                                    @item.ProjectName
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.ReportDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/0001")
                                                        {
                                                            dt = "";
                                                        }
                                                    }
                                                    @dt
                                                </td>

                                                <td>
                                                    @item.Task_Description
                                                </td>

                                                <td>
                                                    @item.Start_Date_Time
                                                </td>

                                                <td>
                                                    @item.End_Date_Time
                                                </td>
                                                <td>
                                                    @item.TaskStatus
                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>

                </div>


            </div>
        </div>


        <div class="table-wrapper">
            <div class="row" style="padding: 1px;">

                <div class="col-lg-6" style="padding: 3px;">

                    <div class="panel panel-default" style="max-height: 350px; min-height: 350px; padding-bottom: 1px;">
                        <div class="panel-heading" style="background-color: blue; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-money fa-fw"></i>Safety - DTTR
                            </span>
                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 1px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table  table-bordered" id="DBDSVManDttrTable" style="background-color: lightgreen; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th>
                                                Sl No
                                            </th>
                                            <th>
                                                Project Name
                                            </th>

                                            <th>
                                                Location
                                            </th>

                                            <th>
                                                Report Date
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            i = 0;

                                        }
                                        @foreach (var item in Model.DB_SVMan_DTTR)
                                        {
                                            i = i + 1;
                                            <tr>
                                                <td>
                                                    @i
                                                </td>
                                                <td>
                                                    @item.ProjectTitle
                                                </td>

                                                <td>
                                                    @item.LocationOfWork

                                                </td>
                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.RepDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt

                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>


                    <!-- /.panel -->

                </div>

                <div class="col-lg-6" style="padding: 3px;">

                    <div class="panel panel-default" style="max-height: 350px; min-height: 350px; padding-bottom: 1px;">
                        <div class="panel-heading" style="background-color: orchid; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-money fa-fw"></i>Quality
                            </span>
                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 1px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table  table-bordered" id="DBDSVManQualityTable" style="background-color: burlywood; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th>
                                                Project Name
                                            </th>
                                            <th>
                                                Inspection Date
                                            </th>

                                            <th>
                                                Inspection Status
                                            </th>

                                            <th>
                                                No. of Defects
                                            </th>

                                            <th>
                                                Defect Fix Status
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var item in Model.DB_SVMan_Quality)
                                        {

                                            <tr>
                                                <td>
                                                    @item.ProjectName
                                                </td>
                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.InspectedDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt
                                                </td>

                                                <td>
                                                    @item.DefStatus

                                                </td>
                                                <td>
                                                    @item.defcnt

                                                </td>

                                                <td>
                                                    @{
                                                        decimal per = 0;
                                                        per = (decimal)item.cmpcnt / (decimal)item.defcnt * (decimal)100;
                                                    }
                                                    @Math.Round(per, 2) %



                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>


                </div>

            </div>

        </div>

        <div class="table-wrapper">

            <div class="row" style="padding-bottom: 1px; padding-top: 1px;">
                <div class="col-lg-12" style="padding: 2px;">
                    <div class="panel panel-default" style="max-height: 300px;">
                        <div class="panel-heading" style="background-color: #41681b; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-tasks fa-fw"></i> Day to Day Operations
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 2px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table table-bordered" id="DBDOperationTable" style="background-color: goldenrod; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th align="center" width="12%">
                                                Project No
                                            </th>

                                            <th align="center" width="40%">
                                                Project Name
                                            </th>

                                            <th align="center" width="12%">
                                                Project Report
                                            </th>

                                            <th align="center" width="122">
                                                Task Status
                                            </th>

                                            <th align="center" width="12%">
                                                Time Entry
                                            </th>

                                            <th align="center" width="12%">
                                                Expense Entry
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Operation)
                                        {

                                            <tr>
                                                <td>
                                                    @item.ProjectNo
                                                </td>
                                                <td>
                                                    @item.ProjectName
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.PR).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {

                                                        }
                                                    }
                                                    @dt


                                                </td>

                                                <td>
                                                    @item.TaskStatus
                                                </td>

                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.TE).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {
                                                            dt = "Not Submitted";

                                                        }
                                                    }
                                                    @dt


                                                </td>

                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.EE).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {
                                                            dt = "Not Claimed";

                                                        }
                                                    }
                                                    @dt

                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>

                </div>

            </div>
        </div>
    }

    @if (Eng360Web.Models.Utility.AppSession.GetCurrentUserGroup() == 3)
    {

        <div class="table-wrapper">
            <div class="row" style="padding-bottom: 1px; padding-top: 1px;">

                <div class="col-lg-12" style="padding: 2px;">
                    <div class="panel panel-default" style="max-height: 300px;">
                        <div class="panel-heading" style="background-color: darkkhaki; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-tasks fa-fw"></i> Projects
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 2px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table table-bordered" id="DBDSVManProjectTable" style="background-color: powderblue; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th align="center">
                                                Sl No
                                            </th>

                                            <th align="center">
                                                Project Name
                                            </th>

                                            <th align="center">
                                                Date
                                            </th>

                                            <th align="center">
                                                Task Description
                                            </th>

                                            <th align="center">
                                                Start Time
                                            </th>

                                            <th align="center">
                                                End Time
                                            </th>

                                            <th align="center">
                                                Task Status
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            var i = 0;
                                        }
                                        @foreach (var item in Model.DB_SVMan_Project)
                                        {
                                            i = i + 1;
                                            <tr>
                                                <td>
                                                    @i
                                                </td>
                                                <td>
                                                    @item.ProjectName
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.ReportDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/0001")
                                                        {
                                                            dt = "";
                                                        }
                                                    }
                                                    @dt
                                                </td>

                                                <td>
                                                    @item.Task_Description
                                                </td>

                                                <td>
                                                    @item.Start_Date_Time
                                                </td>

                                                <td>
                                                    @item.End_Date_Time
                                                </td>
                                                <td>
                                                    @item.TaskStatus
                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>

                </div>

            </div>
        </div>

        <div class="table-wrapper">
            <div class="row" style="padding: 1px;">

                <div class="col-lg-6" style="padding: 3px;">

                    <div class="panel panel-default" style="max-height: 350px; min-height: 350px; padding-bottom: 1px;">
                        <div class="panel-heading" style="background-color: blue; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-money fa-fw"></i>Safety - DTTR
                            </span>
                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 1px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table  table-bordered" id="DBDSVManDttrTable" style="background-color: lightgreen; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th>
                                                Sl No
                                            </th>
                                            <th>
                                                Project Name
                                            </th>

                                            <th>
                                                Location
                                            </th>

                                            <th>
                                                Report Date
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            i = 0;

                                        }
                                        @foreach (var item in Model.DB_SVMan_DTTR)
                                        {
                                            i = i + 1;
                                            <tr>
                                                <td>
                                                    @i
                                                </td>
                                                <td>
                                                    @item.ProjectTitle
                                                </td>

                                                <td>
                                                    @item.LocationOfWork

                                                </td>
                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.RepDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt

                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>


                    <!-- /.panel -->

                </div>

                <div class="col-lg-6" style="padding: 3px;">

                    <div class="panel panel-default" style="max-height: 350px; min-height: 350px; padding-bottom: 1px;">
                        <div class="panel-heading" style="background-color: orchid; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-money fa-fw"></i>Quality
                            </span>
                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 1px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table  table-bordered" id="DBDSVManQualityTable" style="background-color: burlywood; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th>
                                                Project Name
                                            </th>
                                            <th>
                                                Inspection Date
                                            </th>

                                            <th>
                                                Inspection Status
                                            </th>

                                            <th>
                                                No. of Defects
                                            </th>

                                            <th>
                                                Defect Fix Status
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        @foreach (var item in Model.DB_SVMan_Quality)
                                        {

                                            <tr>
                                                <td>
                                                    @item.ProjectName
                                                </td>
                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.InspectedDate).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                    }
                                                    @dt
                                                </td>

                                                <td>
                                                    @item.DefStatus

                                                </td>
                                                <td>
                                                    @item.defcnt

                                                </td>

                                                <td>
                                                    @{
                                                        decimal per = 0;
                                                        per = (decimal)item.cmpcnt / (decimal)item.defcnt * (decimal)100;
                                                    }
                                                    @Math.Round(per, 2)

                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>





                </div>

            </div>
        </div>

        <div class="table-wrapper">
            <div class="row" style="padding-bottom: 1px; padding-top: 1px;">
                <div class="col-lg-12" style="padding: 2px;">
                    <div class="panel panel-default" style="max-height: 300px;">
                        <div class="panel-heading" style="background-color: #41681b; text-align: center">
                            <span style="font-family: Calibri; font-size: 24px; color: yellow; font-weight: bolder;">
                                <i class="fa fa-tasks fa-fw"></i> Day to Day Operations
                            </span>

                            <div class="pull-right">
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body" style="padding: 2px;">
                            <div id="morris-area-chart" style="font-family: Arial; font-size: 14px;">

                                <table width="100%" class="table table-bordered" id="DBDOperationTable" style="background-color: goldenrod; max-height: 280px;">
                                    <thead style="background-color: limegreen; color: white; font-family: 'Century Gothic'; font-size: 16px;">
                                        <tr>
                                            <th align="center" width="12%">
                                                Project No
                                            </th>

                                            <th align="center" width="40%">
                                                Project Name
                                            </th>

                                            <th align="center" width="12%">
                                                Project Report
                                            </th>

                                            <th align="center" width="122">
                                                Task Status
                                            </th>

                                            <th align="center" width="12%">
                                                Time Entry
                                            </th>

                                            <th align="center" width="12%">
                                                Expense Entry
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DB_Operation)
                                        {

                                            <tr>
                                                <td>
                                                    @item.ProjectNo
                                                </td>
                                                <td>
                                                    @item.ProjectName
                                                </td>

                                                <td>
                                                    @{
                                                        var dt = "";
                                                        dt = Convert.ToDateTime(item.PR).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {

                                                        }
                                                    }
                                                    @dt


                                                </td>

                                                <td>
                                                    @item.TaskStatus
                                                </td>

                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.TE).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {
                                                            dt = "Not Submitted";

                                                        }
                                                    }
                                                    @dt


                                                </td>

                                                <td>
                                                    @{
                                                        dt = "";
                                                        dt = Convert.ToDateTime(item.EE).ToString(Eng360Web.Models.Utility.AppSettings.GetDateFormat());
                                                        if (dt == "01/01/2000")
                                                        {
                                                            dt = "Not Claimed";

                                                        }
                                                    }
                                                    @dt

                                                </td>


                                            </tr>
                                        }
                                    </tbody>
                                </table>


                            </div>
                        </div>
                        <!-- /.panel-body -->
                    </div>

                </div>

            </div>
        </div>
    }

</div>



<div id="create-SI-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("SICreate", "Safety")'>
    <div class="modal-dialog" style="width: 80%;height:800px">
        <div class="modal-content">
            <div id="create-SI-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-PTW-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "PTW")'>
    <div class="modal-dialog" style="width: 80%;height:800px">
        <div class="modal-content">
            <div id="create-PTW-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-employee-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Employee")'>
    <div class="modal-dialog" style="width: 80%">
        <div class="modal-content">
            <div id="create-employee-dialog-container"></div>
        </div>
    </div>
</div>
<div id="create-client-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Client")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-client-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-quote-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Quote")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-quote-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-risk-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateRA", "RA")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-risk-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-inward-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateInward", "MaterialManagement")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-inward-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-outward-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateOutward", "MaterialManagement")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-outward-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-stockadj-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateStockAdjust", "MaterialManagement")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-stockadj-dialog-container"></div>
        </div>
    </div>
</div>




<div id="create-po-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "PurchaseOrder")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-po-dialog-container"></div>
        </div>+

    </div>
</div>



<div id="create-product-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Product")'>
    <div class="modal-dialog" style="width: 60%">
        <div class="modal-content">
            <div id="create-product-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-ra-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "RA")'>
    <div class="modal-dialog" style="width: 60%">
        <div class="modal-content">
            <div id="create-ra-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-invoice-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Invoice")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-invoice-dialog-container"></div>
        </div>

    </div>
</div>

<div id="create-InvoiceDesc-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateInvoiceDesc", "Invoice")'>
    <div class="modal-dialog" style="width: 40%">
        <div class="modal-content">
            <div id="create-InvoiceDesc-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-supplier-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Supplier")'>
    <div class="modal-dialog" style="width: 70%">
        <div class="modal-content">
            <div id="create-supplier-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-Contact-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateContact", "Client")'>
    <div class="modal-dialog" style="width: 30%">
        <div class="modal-content">
            <div id="create-Contact-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-QuoteDesc-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateQuoteDesc", "Quote")'>
    <div class="modal-dialog" style="width: 40%">
        <div class="modal-content">
            <div id="create-QuoteDesc-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-PoDesc-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreatePoDesc", "PurchaseOrder")'>
    <div class="modal-dialog" style="width: 40%">
        <div class="modal-content">
            <div id="create-PoDesc-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-ClaimDesc-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateClaimDesc", "Claim")'>
    <div class="modal-dialog" style="width: 40%">
        <div class="modal-content">
            <div id="create-ClaimDesc-dialog-container"></div>
        </div>
    </div>
</div>



<div id="create-ProjectSelection-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateQuoteDesc", "Quote")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="chat-panel panel panel-default">
            <div id="create-ProjectSelection-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-PaymentInfo-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateQuoteDesc", "Quote")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="chat-panel panel panel-default">
            <div id="create-PaymentInfo-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-RiskDetail1-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateRADetail1", "RA")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="chat-panel panel panel-default">
            <div id="create-RiskDetail1-dialog-container"></div>
        </div>
    </div>
</div>




<div id="create-Project-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateProject", "Project")'>
    <div class="modal-dialog" style="width: 60%">
        <div class="chat-panel panel panel-default">
            <div id="create-Project-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-ProjectReport-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateProject", "Project")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="chat-panel panel panel-default">
            <div id="create-ProjectReport-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-createcustom-invoice-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateProject", "Project")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="modal-content">
            <div id="create-createcustom-invoice-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-receivable-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "PaymentReceivable")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="modal-content">
            <div id="create-receivable-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-payable-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "PaymentPayable")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="modal-content">
            <div id="create-payable-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-timeentry-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "TimeEntry")'>
    <div class="modal-dialog" style="width: 45%">
        <div class="modal-content">
            <div id="create-timeentry-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-claim-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Claim")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-claim-dialog-container"></div>
        </div>
    </div>
</div>

@*<div id="create-menu-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateMenu", "User")'>
        <div class="modal-dialog" style="width: 50%">
            <div class="modal-content">
                <div id="create-menu-dialog-container"></div>
            </div>
        </div>
    </div>*@



<div id="create-user-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "User")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-user-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-vehicle-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Transport")'>
    <div class="modal-dialog" style="width: 60%">
        <div class="modal-content">
            <div id="create-vehicle-dialog-container"></div>
        </div>
    </div>
</div>


<div id="create-qualitydefect-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "QualityDefect")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-qualitydefect-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-DefectDetail-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateDefectDetail", "QualityDefect")'>
    <div class="modal-dialog" style="width: 40%">
        <div class="modal-content">
            <div id="create-DefectDetail-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-safety-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("Create", "Safety")'>
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="create-safety-dialog-container"></div>
        </div>
    </div>
</div>

<div id="create-store-dialog" data-backdrop="static" class="modal fade in" data-url='@Url.Action("CreateStore", "MaterialManagement")'>
    <div class="modal-dialog" style="width: 70%">
        <div class="modal-content">
            <div id="create-store-dialog-container"></div>
        </div>
    </div>
</div>

<div>
    <div class="themes">
        <div class="themes-icon"><i class="fa fa-cog fa-spin"></i></div>
        <div class="themes-body">
            <ul id="theme-change" class="theme-colors">
                <li><a href="javasript:void(0);"><span class="theme-default"></span></a></li>
                <li><a href="javasript:void(0);"><span class="theme-blue"></span></a></li>
                <li><a href="javasript:void(0);"><span class="theme-orange"></span></a></li>
            </ul>
        </div>
    </div>
</div>


<div class="overlay" style="display: none;"></div>
<div class="loading-img" style="display: none;"></div>
<!-- /#page-wrapper -->
<script>

    $.ajaxSetup({
        beforeSend: function (xhr) { showLoading(); },
        complete: function (xhr, status) { hideLoading(); }
    });


    $(document).ready(function () {

        $.get("Home/LeftMenu", function (data) {

            $('#leftMenu').html(data);
        });

    });

    $(document).on("click", ".Index", function () {
        location.reload();
     });

    $(document).on("click", ".Employee,.Dash-Employee", function () {

        showLoading();
        $.get("Employee/Index", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".Employees", function () {

        showLoading();
        $.get("Employee/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });



    $(document).on("click", ".Client", function () {
        $.get("Client/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".Clients", function () {

        showLoading();
        $.get("Client/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".Product", function () {
        $.get("Product/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".Vehicle", function () {
        $.get("Transport/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });


    $(document).on("click", ".Products", function () {

        showLoading();
        $.get("Product/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".Supplier", function () {
        $.get("Supplier/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".Suppliers", function () {

        showLoading();
        $.get("Supplier/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".Quotation", function () {
        $.get("Quote/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".Quotations,.Dash-Quotations", function () {

        showLoading();
        $.get("Quote/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".WorkCompletion", function () {

        showLoading();
        $.get("Quote/DOReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".Invoice-Report", function () {

        showLoading();
        $.get("Invoice/InvReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".Project,.Dash-Project", function () {
        $.get("Project/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".Projects", function () {

        showLoading();
        $.get("Project/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".ProjectReports", function () {

        showLoading();
        $.get("ProjectReport/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });



    $(document).on("click", ".Payable", function () {
        $.get("PaymentPayable/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });


    $(document).on("click", ".Receivable", function () {
        $.get("PaymentReceivable/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".PurchaseOrder", function () {
        $.get("PurchaseOrder/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".PurchaseOrders", function () {

        showLoading();
        $.get("PurchaseOrder/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".InwardReport", function () {

        showLoading();
        $.get("MaterialManagement/ReportIndexInw", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".OutwardReport", function () {

        showLoading();
        $.get("MaterialManagement/ReportIndexOut", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });




    $(document).on("click", ".Company", function () {

        showLoading();
        var id = 0;
        $.get("Company/Index", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".TimeEntry", function () {
        $.get("TimeEntry/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".TimeEntries", function () {

        showLoading();
        $.get("TimeEntry/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });



    $(document).on("click", ".ExpenseEntry", function () {
        $.get("Claim/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".Expenses", function () {

        showLoading();
        $.get("Claim/ReportIndex", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".Users", function () {
        $.get("User/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".Menu", function () {
        $.get("User/IndexMenu?grpid=0", function (data) {
            $('#page-wrapper').html(data);
        });
    });


    $(document).on("click", ".QualityInspection", function () {
        $.get("QualityDefect/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".DefectTracking", function () {
        $.get("QualityDefect/DTIndex", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".DTTR", function () {
        $.get("Safety/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".SafIns", function () {
        $.get("Safety/SIIndex", function (data) {
            $('#page-wrapper').html(data);
        });
    });

    $(document).on("click", ".SafInsNew", function () {
        $.get("Safety/NewSIIndex", function (data) {
            $('#page-wrapper').html(data);
        });
    });



    $(document).on("click", ".Store", function () {

        showLoading();
        $.get("MaterialManagement/Index", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".Inward", function () {

        showLoading();
        $.get("MaterialManagement/IndexInward", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".Outward", function () {

        showLoading();
        $.get("MaterialManagement/IndexOutward", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".Stock", function () {

        showLoading();
        $.get("MaterialManagement/IndexStock", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".StockTaking", function () {

        showLoading();
        $.get("MaterialManagement/IndexStockAdjust", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".Invoice,.Dash-Invoice", function () {
        $.get("Invoice/Index", function (data) {
            $('#page-wrapper').html(data);
        });
    });


    $(document).on("click", ".PTW", function () {

        showLoading();
        $.get("PTW/Index", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".PTWCONSPC", function () {

        showLoading();
        $.get("PTW/IndexConspc", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".RA", function () {

        showLoading();
        $.get("RA/Index", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".RAWA", function () {

        showLoading();
        $.get("RA/IndexRAWA", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });


    $(document).on("click", ".RAPS", function () {

        showLoading();
        $.get("RA/IndexRAPS", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".RALN", function () {

        showLoading();
        $.get("RA/IndexRALN", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".RAHZ", function () {

        showLoading();
        $.get("RA/IndexRAHZ", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".RAPA", function () {

        showLoading();
        $.get("RA/IndexRAPA", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    $(document).on("click", ".RACM", function () {

        showLoading();
        $.get("RA/IndexRACM", function (data) {
            $('#page-wrapper').html(data);
        });
        hideLoading();
    });

    function showLoading() {
        $('.overlay').show();
        $('.loading-img').show();
    }
    function hideLoading() {
        $('.overlay').hide();
        $('.loading-img').hide();
    }

    function ShowGroupMenu(id) {

        var xt = parseInt($('#GroupID').val());

        $.get("User/IndexMenu?grpid=" + id, function (data) {

            $('#page-wrapper').html(data);
        });

    }

    function CreateRA() {
        var url = $('#create-risk-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function EditRA(id) {
        var url = "RA/EditRA/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }

    function AddRADetails(id) {

        var url = "RA/AddRADetailsOne/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }


    function AddRACMEV(id) {

        var url = "RA/AddRACM/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }





    function CreateRAWA() {
        var url = 'RA/Create/RAWA';
        $.get(url, function (data) {
            $('#create-ra-dialog-container').html(data);
            $('#create-ra-dialog').modal('show');
        });
    }

    function CreateRAPS() {
        var url = 'RA/Create/RAPS';
        $.get(url, function (data) {
            $('#create-ra-dialog-container').html(data);
            $('#create-ra-dialog').modal('show');
        });
    }

    function CreateRALN() {
        var url = 'RA/Create/RALN';
        $.get(url, function (data) {
            $('#create-ra-dialog-container').html(data);
            $('#create-ra-dialog').modal('show');
        });
    }

    function CreateRAHZ() {
        var url = 'RA/Create/RAHZ';
        $.get(url, function (data) {
            $('#create-ra-dialog-container').html(data);
            $('#create-ra-dialog').modal('show');
        });
    }

    function CreateRAPA() {
        var url = 'RA/Create/RAPA';
        $.get(url, function (data) {
            $('#create-ra-dialog-container').html(data);
            $('#create-ra-dialog').modal('show');
        });
    }

    function CreateRACM() {
        var url = 'RA/Create/RACM';
        $.get(url, function (data) {
            $('#create-ra-dialog-container').html(data);
            $('#create-ra-dialog').modal('show');
        });
    }

    function EditRAMaster(typ,id) {
        var url = "RA/Edit?typ=" + typ + "&id=" + id;
        $.get(url, function (data) {
            $('#create-ra-dialog-container').html(data);
            $('#create-ra-dialog').modal('show');
        });
    }


    function CreateSafIns() {
        var url = 'Safety/SICreate';

        $.get(url, function (data) {
            $('#create-SI-dialog-container').html(data);
            $('#create-SI-dialog').modal('show');
        });
    }

    function CreateSafInsNew() {
        var url = 'Safety/NewSICreate';

        $.get(url, function (data) {
            $('#create-SI-dialog-container').html(data);
            $('#create-SI-dialog').modal('show');
        });
    }

    function EditSafInsNew(id) {
        var url = 'Safety/NewSIEdit/' + id;

        $.get(url, function (data) {
            $('#create-SI-dialog-container').html(data);
            $('#create-SI-dialog').modal('show');
        });
    }



    function EditSafIns(id) {
        var url = "Safety/SIEdit/" + id;
        $.get(url, function (data) {
            $('#create-SI-dialog-container').html(data);
            $('#create-SI-dialog').modal('show');
        });
    }



    function CreatePTWHOT() {
        debugger;
        var url = 'PTW/Create/PTWHOT';
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }

    function CreatePTWCONSPC() {
        debugger;
        var url = 'PTW/CreateConspc';
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }

    function CreatePTWWAH() {
        debugger;
        var url = 'PTW/Create/PTWWAH';
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }

    function CreatePTWWFEX() {
        debugger;
        var url = 'PTW/Create/PTWWFEX';
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }

    function CreatePTWLOPT() {
        debugger;
        var url = 'PTW/Create/PTWLOPT';
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }



    function EditPTW(id) {
        var url = "PTW/Edit/" + id;
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }

    function EditPTWCONSPC(id) {
        var url = "PTW/EditConspc/" + id;
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }


    function RevokePTW(id) {
        var url = "PTW/RevokePTW/" + id;
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }

    function RevokePTWConspc(id) {
        var url = "PTW/RevokePTWConspc/" + id;
        $.get(url, function (data) {
            $('#create-PTW-dialog-container').html(data);
            $('#create-PTW-dialog').modal('show');
        });
    }




    function CreateEmployee()
    {

        var url = $('#create-employee-dialog').data('url');
        $.get(url,  function (data) {
            $('#create-employee-dialog-container').html(data);
            $('#create-employee-dialog').modal('show');
        });
    }


    function EditEmployee(id)
    {
        var url = "Employee/Edit/" + id;
        $.get(url, function (data) {
            $('#create-employee-dialog-container').html(data);
            $('#create-employee-dialog').modal('show');
        });
    }

    function DeleteEmployee(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Employee ?", DeleteEmployeeConfirmed, null, id)
    }

    function DeleteEmployeeConfirmed(id)
    {

        $.post("Employee/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Employee").click();
            }
            else {
                alertDialog("Delete Employee failed")
            }
        });
    }

    function ViewEmployee(id) {
        var url = "Employee/Details/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }


    function CreateInvoice() {
        var url = $('#create-invoice-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function EditInvoice(id) {

        $.get("Invoice/Edit/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }


    function ViewQLPayment(id) {
        var url = "Quote/ViewQLPayment/" + id;
        $.get(url, function (data) {
            $('#create-PaymentInfo-dialog-container').html(data);
            $('#create-PaymentInfo-dialog').modal('show');

        });
    }

    function ViewInvoicePayment(id) {
        var url = "Invoice/ViewInvPayment/" + id;
        $.get(url, function (data) {
            $('#create-PaymentInfo-dialog-container').html(data);
            $('#create-PaymentInfo-dialog').modal('show');

        });
    }


    var editFlag;

    function CreateInvDesc() {
        createFlag = true;
        editFlag = false;
        var url = $('#create-InvoiceDesc-dialog').data('url');
        $.get(url, function (data) {
            $('#create-InvoiceDesc-dialog-container').html(data);
            $('#create-InvoiceDesc-dialog').modal('show');
            $('#create-InvoiceDesc-dialog').css('z-index', '10000');
        });

    }

    function CreateInvoiceDescEdit(id) {
        //var url = $('#create-QuoteDesc-dialog').data('url');
        editFlag = true;
        $.get("Invoice/CreateInvoiceDesc/" + id, function (data) {
            $('#create-InvoiceDesc-dialog-container').html(data);
            $('#create-InvoiceDesc-dialog').modal('show');
            $('#create-InvoiceDesc-dialog').css('z-index', '10000');
        });

    }


    function CreateQuote() {
        var url = $('#create-quote-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function CreateInward() {
        var url = $('#create-inward-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function EditInward(id) {

        $.get("MaterialManagement/EditInward/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function ViewInward(id) {

        $.get("MaterialManagement/ViewInward/" + id, function (data) {

            $('#page-wrapper').html(data);
        });
    }



    function CreateOutward() {
        var url = $('#create-outward-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function EditOutward(id) {

        $.get("MaterialManagement/EditOutward/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function ViewOutward(id) {

        $.get("MaterialManagement/ViewOutward/" + id, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function CreateStockAdjust() {
        var url = $('#create-stockadj-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function ViewStockAdjust(id) {

        $.get("MaterialManagement/ViewStockAdjust/" + id, function (data) {

            $('#page-wrapper').html(data);
        });
    }




    function CreateClaim() {
        var url = $('#create-claim-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }



    function CreatePO() {
        var url = $('#create-po-dialog').data('url');
        debugger;
        $.get(url, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function CreateReceivable() {

        var url = $('#create-receivable-dialog').data('url');
        $.get(url, function (data) {
            $('#create-receivable-dialog-container').html(data);
            $('#create-receivable-dialog').modal('show');
        });
    }

    function EditRecVoucher(id) {
        var url = "PaymentReceivable/Edit/" + id;
        $.get(url, function (data) {
            $('#create-receivable-dialog-container').html(data);
            $('#create-receivable-dialog').modal('show');
        });
    }

    function DeleteReceivable(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Voucher ?", DeleteReceivableConfirmed, null, id)
    }

    function DeleteReceivableConfirmed(id)
    {

        $.post("PaymentReceivable/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Receivable").click();
            }
            else {
                alertDialog("Delete Voucher failed")
            }
        });
    }


    function CreatePayable() {

        var url = $('#create-payable-dialog').data('url');
        $.get(url, function (data) {
            $('#create-payable-dialog-container').html(data);
            $('#create-payable-dialog').modal('show');
        });
    }

    function EditPayVoucher(id) {
        var url = "PaymentPayable/Edit/" + id;
        $.get(url, function (data) {
            $('#create-payable-dialog-container').html(data);
            $('#create-payable-dialog').modal('show');
        });
    }

    function DeletePayable(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Voucher ?", DeletePayableConfirmed, null, id)
    }

    function DeletePayableConfirmed(id)
    {

        $.post("PaymentPayable/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Payable").click();
            }
            else {
                alertDialog("Delete Voucher failed")
            }
        });
    }

    function CreateStore() {
        var url = $('#create-store-dialog').data('url');
        $.get(url, function (data) {
            $('#create-store-dialog-container').html(data);
            $('#create-store-dialog').modal('show');
        });
    }

    function EditStore(id) {
        var url = "MaterialManagement/EditStore/" + id;
        $.get(url, function (data) {
            $('#create-store-dialog-container').html(data);
            $('#create-store-dialog').modal('show');
        });
    }




    function CreateProduct() {
            var url = $('#create-product-dialog').data('url');
            $.get(url, function (data) {
                $('#create-product-dialog-container').html(data);
                $('#create-product-dialog').modal('show');
            });
    }

    function EditProduct(id) {
        var url = "Product/Edit/" + id;
        $.get(url, function (data) {
            $('#create-product-dialog-container').html(data);
            $('#create-product-dialog').modal('show');
        });
    }

    function ViewProduct(id) {
        var url = "Product/Details/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }

    function DeleteProduct(id,name)
    {
        debugger;
        confirmDialogYesorNo("Are you sure to delete the Product " + name + "?", DeleteProductConfirmed, null, id)
    }

    function DeleteProductConfirmed(id)
    {

        $.post("Product/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Product").click();
            }
            else {
                alertDialog("Delete Product failed")
            }
        });
    }

    function CreateVehicle() {
        var url = $('#create-vehicle-dialog').data('url');
        $.get(url, function (data) {
            $('#create-vehicle-dialog-container').html(data);
            $('#create-vehicle-dialog').modal('show');
        });
    }

    function EditVehicle(id) {
        var url = "Transport/Edit/" + id;
        $.get(url, function (data) {
            $('#create-vehicle-dialog-container').html(data);
            $('#create-vehicle-dialog').modal('show');
        });
    }

    function ViewVehicle(id) {
        var url = "Transport/Details/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }


    function DeleteVehicle(id,name)
    {
        debugger;
        confirmDialogYesorNo("Are you sure to delete the Vehicle " + name + "?", DeleteVehicleConfirmed, null, id)
    }

    function DeleteVehicleConfirmed(id)
    {

        $.post("Transport/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Vehicle").click();
            }
            else {
                alertDialog("Delete Vehicle failed")
            }
        });
    }



    function CreateUser() {
        var url = $('#create-user-dialog').data('url');
        $.get(url, function (data) {
            $('#create-user-dialog-container').html(data);
            $('#create-user-dialog').modal('show');
        });
    }

    function EditUser(id) {
        var url = "User/Edit/" + id;
        $.get(url, function (data) {
            $('#create-user-dialog-container').html(data);
            $('#create-user-dialog').modal('show');
        });
    }


    function DeleteUser(id,name)
    {
        debugger;
        confirmDialogYesorNo("Are you sure to delete the User " + name + "?", DeleteUserConfirmed, null, id)
    }

    function DeleteUserConfirmed(id)
    {

        $.post("User/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Users").click();
            }
            else {
                alertDialog("Delete User failed")
            }
        });
    }





    function EditQuote(id, flag) {

        $.get("Quote/Edit?id=" + id + "&flag=" + flag, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }


    function EditPo(id) {
        $.get("PurchaseOrder/Edit/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function EditClaim(id) {
        $.get("Claim/Edit/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }




    function CreateClient() {
        var url = $('#create-client-dialog').data('url');
        $.get(url, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }


    function EditClient(id) {
        $.get("Client/Edit/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function ViewClient(id) {
        var url = "Client/Details/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }

    function DeleteClient(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Client ?", DeleteClientConfirmed, null, id)
    }

    function DeleteClientConfirmed(id)
    {

        $.post("Client/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Client").click();
            }
            else {
                alertDialog("Delete Client failed")
            }
        });
    }



    function CreateContact() {
        var url = $('#create-Contact-dialog').data('url');
        $.get(url, function (data) {
            $('#create-Contact-dialog-container').html(data);
            $('#create-Contact-dialog').modal('show');
        });

    }

    function CreateQuoteDesc() {
        var url = $('#create-QuoteDesc-dialog').data('url');
        $.get(url, function (data) {
            $('#create-QuoteDesc-dialog-container').html(data);
            $('#create-QuoteDesc-dialog').modal('show');
            $('#create-QuoteDesc-dialog').css('z-index', '10000');
        });

    }

    function CreateCIDesc() {
        var url = $('#create-QuoteDesc-dialog').data('url');
        $.get(url, function (data) {
            $('#create-QuoteDesc-dialog-container').html(data);
            $('#create-QuoteDesc-dialog').modal('show');
            $('#create-QuoteDesc-dialog').css('z-index', '10000');
        });

    }



    function CreateClaimDesc() {
        var url = $('#create-ClaimDesc-dialog').data('url');
        $.get(url, function (data) {
            $('#create-ClaimDesc-dialog-container').html(data);
            $('#create-ClaimDesc-dialog').modal('show');
            $('#create-ClaimDesc-dialog').css('z-index', '10000');
        });

    }



    function CreateQuoteDescEdit(id) {
        //var url = $('#create-QuoteDesc-dialog').data('url');
        $.get("Quote/CreateQuoteDesc/" + id, function (data) {
            $('#create-QuoteDesc-dialog-container').html(data);
            $('#create-QuoteDesc-dialog').modal('show');
            $('#create-QuoteDesc-dialog').css('z-index', '10000');
        });

    }


    function CreateClaimDescEdit(id) {
        //var url = $('#create-QuoteDesc-dialog').data('url');
        $.get("Claim/CreateClaimDesc/" + id, function (data) {
            $('#create-ClaimDesc-dialog-container').html(data);
            $('#create-ClaimDesc-dialog').modal('show');
            $('#create-ClaimDesc-dialog').css('z-index', '10000');
        });

    }


    function CreatePoDesc() {
        var url = $('#create-PoDesc-dialog').data('url');
        $.get(url, function (data) {
            $('#create-PoDesc-dialog-container').html(data);
            $('#create-PoDesc-dialog').modal('show');
            $('#create-PoDesc-dialog').css('z-index', '10000');
        });

    }

    function CreatePoDescEdit(id) {
        //var url = $('#create-PoDesc-dialog').data('url');
        $.get("PurchaseOrder/CreatePoDesc/" + id, function (data) {
            $('#create-PoDesc-dialog-container').html(data);
            $('#create-PoDesc-dialog').modal('show');
            $('#create-PoDesc-dialog').css('z-index', '10000');
        });

    }




    function CreateSupplier() {
        var url = $('#create-supplier-dialog').data('url');
        $.get(url, function (data) {
            $('#create-supplier-dialog-container').html(data);
            $('#create-supplier-dialog').modal('show');
        });
    }

    function EditSupplier(id) {
        var url = "Supplier/Edit/" + id;
        $.get(url, function (data) {
            $('#create-supplier-dialog-container').html(data);
            $('#create-supplier-dialog').modal('show');
        });
    }


    function ViewSupplier(id) {
        var url = "Supplier/Details/" + id;
        $.get(url, function (data) {
            $('#page-wrapper').html(data);
        });
    }


    function DeleteSupplier(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Supplier ?", DeleteSupplierConfirmed, null, id)
    }

    function DeleteSupplierConfirmed(id)
    {

        $.post("Supplier/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Supplier").click();
            }
            else {
                alertDialog("Delete Supplier failed")
            }
        });
    }


    function EditProject(id) {

        var url = "Project/Edit/" + id;
        $.get(url, function (data) {
            $('#create-Project-dialog-container').html(data);
            $('#create-Project-dialog').modal('show');
        });

    }

    function ViewProject(id) {

        var url = "Project/Details/" + id;
        $.get(url, function (data) {
            $('#create-Project-dialog-container').html(data);
            $('#create-Project-dialog').modal('show');
        });

    }

    function CreateProjectReport(id) {

        var url = "ProjectReport/Create/" + id;

        $.get(url, function (data) {
            $('#create-ProjectReport-dialog-container').html(data);
            $('#create-ProjectReport-dialog').modal('show');
        });
    }

    function EditProjectReport(id) {
        var url = "ProjectReport/Edit/" + id;
        debugger;
        $.get(url, function (data) {
            $('#create-ProjectReport-dialog-container').html(data);
            $('#create-ProjectReport-dialog').modal('show');
        });
    }
    function ViewReports(id) {

        //var url = $('#create-projectReport-dialog').data('url');
        var url = "ProjectReport/Index/" + id;
        $.get(url, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function ViewPTWIndex(id) {

        //var url = $('#create-projectReport-dialog').data('url');
        var url = "PTW/Index_View/" + id;
        $.get(url, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function ViewPTWConspcIndex(id) {

        //var url = $('#create-projectReport-dialog').data('url');
        var url = "PTW/Index_Conspc_View/" + id;
        $.get(url, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }



    function CreateSafety() {
        var url = $('#create-safety-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }


    function CreateTimeEntry() {
        var url = $('#create-timeentry-dialog').data('url');
        $.get(url, function (data) {
            $('#create-timeentry-dialog-container').html(data);
            $('#create-timeentry-dialog').modal('show');
        });
    }

    function EditTimeEntry(id) {
        var url = "TimeEntry/Edit/" + id;
        $.get(url, function (data) {
            $('#create-timeentry-dialog-container').html(data);
            $('#create-timeentry-dialog').modal('show');
        });
    }

    function DeleteTimeEntry(id) {

        confirmDialogYesorNo("Are you sure to delete this Time Entry ?", DeleteTimeEntryConfirmed, null, id)
    }

    function DeleteTimeEntryConfirmed(id)
    {

        $.post("TimeEntry/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".TimeEntry").click();
            }
            else {
                alertDialog("Delete Time Entry failed")
            }
        });
    }


    $(document).on("click", "#create-timeentry-dialog-save", function () {

        debugger;

        var startTime = new Date($('#Work_Start_Time').val());
        var endTime = new Date($('#Work_End_Time').val());
        var difference = endTime.getTime() - startTime.getTime(); // This will give difference in milliseconds
        var resultInMinutes = Math.round(difference / 60000);

        if (resultInMinutes < 1) {
            alert("Invalid start date time");
            return;
        }

        if (resultInMinutes > 1439) {
            alert("End date time should not exceed 24 Hrs");
            return;
        }


        if (!$('#timeentryForm').valid()) {
            return;
        }

        var pid = $("#ProjectID").val();
        var eid = $("#EmpID").val();
        if (eid == null || pid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }


        $.post("TimeEntry/Create", $('#timeentryForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.TimeEntry').click();
                $('#create-timeentry-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Add Time Entry Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#create-timeentry-Editdialog-save", function () {
        debugger;
        var stdt = $('#ReportDate').val() + ' ' + $('#Work_Start_Time').val();
        var eddt = $('#ReportEndDate').val() + ' ' + $('#Work_End_Time').val();

        var startTime = new Date(stdt);
        var endTime = new Date(eddt);
        var difference = endTime.getTime() - startTime.getTime(); // This will give difference in milliseconds
        var resultInMinutes = Math.round(difference / 60000);

        if (resultInMinutes < 1) {
            alert("Invalid start date time");
            return;
        }

        if (resultInMinutes > 1439) {
            alert("End date time should not exceed 24 Hrs");
            return;
        }

        if (!$('#timeentryEditForm').valid()) {
            return;
        }


        var id = $('#EmpID').val();
        var repdate = $('#ReportDate').val();
        debugger;
        $.post("TimeEntry/Edit", $('#timeentryEditForm').serialize(), function (data) {

            if (data.value == "OK") {

                //var url = "TimeEntry/TeDetail/" + id + repdate;

                //$.get("TimeEntry/TeDetail", { id: id, repdate: repdate }, function (data) {

                //    $('#page-wrapper').html(data);
                //});

                $('.TimeEntry').click();
                $('#create-timeentry-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Save Time Entry Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });






    $(document).on("click", "#create-employee-dialog-save", function () {

        if (!$('#employeeForm').valid()) {
            return;
        }



            $.post("Employee/Create", $('#employeeForm').serialize(), function (data) {

                if (data.value == "OK") {
                    $('.Employee').click();
                    $('#create-employee-dialog').modal('hide');
                }
                else if (data.value == "Failed") {
                    alertDialog("Employee Creation Failed!");
                }
                else {
                    alertDialog(data.value);
                }

            });
    });

    $(document).on("click", "#create-employee-dialog-Edit", function () {

        if (!$('#employeeEditForm').valid()) {
            return;
        }


        $.post("Employee/Edit", $('#employeeEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Employee').click();
                $('#create-employee-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Employee update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#report-employeeIndex-search", function () {

        $.post("Employee/ReportIndex", $('#employeeReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });

    $(document).on("click", "#report-inwardIndex-search", function () {

        $.post("MaterialManagement/ReportIndexInw", $('#inwReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });

    $(document).on("click", "#report-outwardIndex-search", function () {

        $.post("MaterialManagement/ReportIndexOut", $('#outReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });



    $(document).on("click", "#create-ra-dialog-save", function () {

        var txt = $('#ItemDescription').val();
        var idchk = $('#ramastertype').val();
        if (txt == null || txt == '') {
            alertDialog("Please fill Description");
            return;
        }
        $.post("RA/Create", $('#ramasterForm').serialize(), function (data) {

            if (data.value == "OK") {

                if(idchk == "RAWA")
                    $('.RAWA').click();

                if (idchk == "RAPS")
                    $('.RAPS').click();

                if (idchk == "RALN")
                    $('.RALN').click();

                if (idchk == "RAHZ")
                    $('.RAHZ').click();

                if (idchk == "RAPA")
                    $('.RAPA').click();

                if (idchk == "RACM")
                    $('.RACM').click();

                $('#create-ra-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("RA Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#create-ra-dialog-Edit", function () {

        var txt = $('#ItemDescription').val();
        var idchk = $('#ramastertype').val();
        if (txt == null || txt == '') {
            alertDialog("Please fill Description");
            return;
        }
        $.post("RA/Create", $('#ramasterForm').serialize(), function (data) {

            if (data.value == "OK") {
                debugger;
                if (idchk == "RAWA")
                    $('.RAWA').click();

                if (idchk == "RAPS")
                    $('.RAPS').click();

                if (idchk == "RALN")
                    $('.RALN').click();

                if (idchk == "RAHZ")
                    $('.RAHZ').click();

                if (idchk == "RAPA")
                    $('.RAPA').click();

                if (idchk == "RACM")
                    $('.RACM').click();

                $('#create-ra-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("RA Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#create-raDetail1-dialog-save", function () {


        var object = {};
        contacts = [];
        radescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { Locations: data[0], Process: data[1], WorkActivities: data[2]}
            contacts.push(object);

        });

        if (contacts.length == 0) {
            alertDialog("Please add atleast one item");
            return false;
        }

            var aform = $('#riskForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_ra_trans_master = {};
            $('#riskForm').serializeArray().map(function (x) { eng_ra_trans_master[x.name] = x.value; });
            debugger;

            $.post("RA/AddRADetailsOne", { ra: eng_ra_trans_master, raDetails: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.RA').click();
                }
                else {
                    alertDialog("RA Work Activity creation failed!");
                }
            });
    });



    $(document).on("click", "#create-racm-dialog-save", function () {
        debugger;

        var object = {};
        contacts = [];
        radescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = {
                RAWADetID: data[14], RAWADetail: data[0], HazardID: data[1],
                PAHID: data[2], REvExRCID: data[3], REvRMLHID: data[4],
                REvRMSVID: data[5], REvRPN: data[6], RCAdRCID: data[7],
                RCRMLHID: data[8], RCRMSVID: data[9], RCRPN: data[10],
                ImpOfficer: data[11], DueDate: data[12], Remarks: data[13]
            }
            contacts.push(object);

        });

        if (contacts.length == 0) {
            alertDialog("Please add atleast one item");
            return false;
        }
        debugger;
        var aform = $('#riskcontrolForm');
        var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

        var eng_ra_trans_master = {};
        $('#riskcontrolForm').serializeArray().map(function (x) { eng_ra_trans_master[x.name] = x.value; });

        $.post("RA/AddRACM", { ra: eng_ra_trans_master, raDetails: contacts, __RequestVerificationToken: atoken }, function (data) {
            if (data.value == "OK") {
                $('.RA').click();
            }
            else {
                alertDialog("RA Control Measure creation failed!");
            }
        });
    });






    function DeleteRAWA(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Work Activity ?", DeleteRAWAConfirmed, null, id)
    }

    function DeleteRAWAConfirmed(id)
    {

        $.post("RA/Delete/", { typ: "RAWA", id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".RAWA").click();
            }
            else {
                alertDialog("Delete Work Activity failed")
            }
        });
    }

    function DeleteRAPS(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Process ?", DeleteRAPSConfirmed, null, id)
    }

    function DeleteRAPSConfirmed(id)
    {

        $.post("RA/Delete/", { typ: "RAPS", id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".RAPS").click();
            }
            else {
                alertDialog("Delete Process failed")
            }
        });
    }

    function DeleteRALN(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Location ?", DeleteRALNConfirmed, null, id)
    }

    function DeleteRALNConfirmed(id)
    {

        $.post("RA/Delete/", { typ: "RALN", id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".RALN").click();
            }
            else {
                alertDialog("Delete RA Location failed")
            }
        });
    }

    function DeleteRAHZ(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Location ?", DeleteRAHZConfirmed, null, id)
    }

    function DeleteRAHZConfirmed(id)
    {

        $.post("RA/Delete/", { typ: "RAHZ", id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".RAHZ").click();
            }
            else {
                alertDialog("Delete Hazard failed")
            }
        });
    }


    function DeleteRAPA(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Location ?", DeleteRAPAConfirmed, null, id)
    }

    function DeleteRAPAConfirmed(id)
    {

        $.post("RA/Delete/", { typ: "RAPA", id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".RAPA").click();
            }
            else {
                alertDialog("Delete Possible Accident failed")
            }
        });
    }

    function DeleteRACM(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Location ?", DeleteRACMConfirmed, null, id)
    }

    function DeleteRACMConfirmed(id)
    {

        $.post("RA/Delete/", { typ: "RACM", id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".RACM").click();
            }
            else {
                alertDialog("Delete Control Measure failed")
            }
        });
    }


    $(document).on("click", "#create-risk-dialog-save", function () {

        if (!$('#riskForm').valid()) {
            return;
        }

        $.post("RA/CreateRA", $('#riskForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.RA').click();
                $('#create-risk-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Risk Assessment Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-risk-dialog-Edit", function () {

        if (!$('#riskEditForm').valid()) {
            return;
        }


        $.post("RA/EditRA", $('#riskEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.RA').click();
                $('#create-risk-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Risk update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });





    $(document).on("click", "#create-product-dialog-save", function () {

        if (!$('#productForm').valid()) {
            return;
        }


        $.post("Product/Create", $('#productForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Product').click();
                $('#create-product-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Product Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-product-dialog-Edit", function () {

        if (!$('#productEditForm').valid()) {
            return;
        }


        $.post("Product/Edit", $('#productEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Product').click();
                $('#create-product-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Product update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#report-productIndex-search", function () {

            $.post("Product/ReportIndex", $('#productReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });




    $(document).on("click", "#create-supplier-dialog-save", function () {

        if (!$('#supplierForm').valid()) {
            return;
        }

        if ($("#eng_address_master_Email").val() == "") {
            alertDialog("Please fill contact information");
            return;
        }


        $.post("Supplier/Create", $('#supplierForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Supplier').click();
                $('#create-supplier-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Supplier Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-supplier-dialog-Edit", function () {

        if (!$('#supplierEditForm').valid()) {
            return;
        }


        $.post("Supplier/Edit", $('#supplierEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Supplier').click();
                $('#create-supplier-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Supplier update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-client-dialog-save", function () {


        //if ($("#eng_address_master_Email").val() == "") {
        //    alertDialog("Please fill contact information");
        //    return;
        //}

        contactTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            var object = { NamePrefix: data[0], SPOCName: data[1], Email: data[2], Mobile: data[3], Tel: data[4] }
            contacts.push(object);

        });


        if (contacts.length == 0) {
            alertDialog("Please add atleast one Contact");
            return false;
        }


        if ($('#clientForm').valid()) {
            var aform = $('#clientForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_client_master = {};
            $('#clientForm').serializeArray().map(function (x) { eng_client_master[x.name] = x.value; });

            $.post("Client/Create", { eng_client_master: eng_client_master, clientContact: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Client').click();
                }
                else {
                    alertDialog("Client creation failed!");
                }
            });
        }
    });

    function CreateClientContactEdit(id) {
        //var url = $('#create-QuoteDesc-dialog').data('url');
        $.get("Client/CreateContact/" + id, function (data) {
            $('#create-Contact-dialog-container').html(data);
            $('#create-Contact-dialog').modal('show');
        });

    }

    $(document).on("click", "#create-clientEdit-dialog-save", function () {

        contactTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();


            var object = { CCID: data[5], NamePrefix: data[0], SPOCName: data[1], Email: data[2], Mobile: data[3], Tel: data[4] }
            contacts.push(object);

        });


        if (contacts.length == 0) {
            alertDialog("Please add atleast one Contact");
            return false;
        }


        if ($('#clientEditForm').valid()) {
            var aform = $('#clientEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_client_master = {};
            $('#clientEditForm').serializeArray().map(function (x) { eng_client_master[x.name] = x.value; });

            $.post("Client/Edit", { eng_client_master: eng_client_master, clientContact: contacts, deleted: deleteIDs, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Client').click();
                }
                else {
                    alertDialog("Client update failed!");
                }
            });
        }
    });


    $(document).on("click", "#report-clientIndex-search", function () {

        $.post("Client/ReportIndex", $('#clientReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });


    $(document).on("click", "#report-supplierIndex-search", function () {

        $.post("Supplier/ReportIndex", $('#supplierReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });

    $(document).on("click", "#report-quoteIndex-search", function () {

        $.post("Quote/ReportIndex", $('#quoteReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });

    $(document).on("click", "#report-doIndex-search", function () {

        $.post("Quote/DOReportIndex", $('#doReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });

    $(document).on("click", "#report-invIndex-search", function () {

        $.post("Invoice/InvReportIndex", $('#invReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });

    $(document).on("click", "#report-poIndex-search", function () {

        $.post("PurchaseOrder/ReportIndex", $('#poReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });


    $(document).on("click", "#report-projectIndex-search", function () {

        $.post("Project/ReportIndex", $('#projectReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });


    $(document).on("click", "#report-projectreportIndex-search", function () {

        $.post("ProjectReport/ReportIndex", $('#projectreportReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });


    $(document).on("click", "#report-expensereportIndex-search", function () {

        $.post("Claim/ReportIndex", $('#expenseReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });

    $(document).on("click", "#report-timeentryreportIndex-search", function () {

        $.post("TimeEntry/ReportIndex", $('#timeentryReportForm').serialize(), function (data) {
            $('#page-wrapper').html(data);

        });
    });




    function EditProject(id) {

        var url = "Project/Edit/" + id;
        $.get(url, function (data) {
            $('#create-Project-dialog-container').html(data);
            $('#create-Project-dialog').modal('show');
        });

    }


    function CreateProjectReport(id) {
        var url = "ProjectReport/Create/" + id;
        $.get(url, function (data) {
            $('#create-ProjectReport-dialog-container').html(data);
            $('#create-ProjectReport-dialog').modal('show');
        });
    }

    function EditProjectReport(id) {
        var url = "ProjectReport/Edit/" + id;
        $.get(url, function (data) {
            $('#create-ProjectReport-dialog-container').html(data);
            $('#create-ProjectReport-dialog').modal('show');
        });
    }
    function ViewReports(id) {

        //var url = $('#create-projectReport-dialog').data('url');
        var url = "ProjectReport/Index/" + id;
        $.get(url, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function ViewTimeEntries(id,repdate) {

        //var url = $('#create-projectReport-dialog').data('url');
        var url = "TimeEntry/TeDetail/" + id + repdate;

        $.get("TimeEntry/TeDetail", { id: id, repdate: repdate}, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    $(document).on("click", "#create-projectCreateselection-dialog-save", function () {

        if ($('#LocationId').val() == "0")
        {
            alertDialog("Please select location");
            return;
        }

        if ($('#ProjectName').val() == "" || $('#ProjectName').val() == null) {
            alertDialog("Please enter Project Name");
            return;
        }

        if ($('#startDate').val() == "")
        {
            alertDialog("Please enter start date");
            return;
        }


        var ids=getSelectedIDs();
        if (ids.length <= 0)
        {
            alertDialog("Please select one line item");
            return;
        }

        $.post("Quote/CreateProjectSelection", { ids: ids, locationID: $('#LocationId').val(), startDate: $('#startDate').val(), endDate: $('#EndDate').val(), ProjectName: $('#ProjectName').val(), @Html.AntiForgeryTokenForAjaxPost() }, function (data) {
            if (data.value == "OK")
            {
                $('.Quotation').click();
                $('#create-ProjectSelection-dialog').modal('hide');
            }
            else
            {
                alertDialog("Project creation failed!")
            }
        });
    });

    $(document).on("click", "#create-quote-dialog-save", function () {
        debugger;

        if ($("#QuoteDate").val() == "" || $("#ValidTill").val() == "" || $("#QuoteTitle").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var vid = $("#ValidTill").val();
        var qtid = $("#QuoteTitle").val();
        if (vid == null || qtid == null) {
            alertDialog("Please fill user fields");
            return;
        }

           if (!$('#quotationForm').valid()) {
            return;
        }

           var object = {};
           contacts = [];
        quotedescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { QuoteDescription: data[0], Quantity: parseFloat(data[1]), UnitOfMeasure: data[2], QuotePrice: parseFloat(data[3])}
            contacts.push(object);


        });


        if ($('#quotationForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one description");
                return false;
            }

            var aform = $('#quotationForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_quote_master = {};
            $('#quotationForm').serializeArray().map(function (x) { eng_quote_master[x.name] = x.value; });
            debugger;
            eng_quote_master.isAutoApproved = $('#isAutoApproved').prop('checked') == true;
            eng_quote_master.isProjectCreated = $('#isProjectCreated').prop('checked') == true;
            $.post("Quote/Create", { eng_quote_master: eng_quote_master, quoteDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Quotation').click();
                }
                else {
                    alertDialog("Quotation creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-quoteEdit-dialog-save", function () {

        quotedescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();


            var object = { QDID: data[4], QuoteDescription: data[0], Quantity: parseFloat(data[1]), UnitOfMeasure: data[2], QuotePrice: parseFloat(data[3]) }
            contacts.push(object);

        });

        if (contacts.length == 0) {
            alertDialog("Please add atleast one description");
            return false;
        }

        if ($('#quotationEditForm').valid()) {
            var aform = $('#quotationEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_quote_master = {};
            $('#quotationEditForm').serializeArray().map(function (x) { eng_quote_master[x.name] = x.value; });
            eng_quote_master.isAutoApproved = $('#isAutoApproved').prop('checked') == true;
            eng_quote_master.isProjectCreated = $('#isProjectCreated').prop('checked') == true;

            $.post("Quote/Edit", { eng_quote_master: eng_quote_master, quoteDescription: contacts, deleted: deleteIDs, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Quotation').click();
                }
                else {
                    alertDialog("Quotation update failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-QuoteDesc-dialog-save", function () {
        addDataToDataTable();
    });

    $(document).on("click", "#create-PoDesc-dialog-save", function () {
        addDataToDataTable();
    });

    $(document).on("click", "#create-ClaimDesc-dialog-save", function () {
        addDataToDataTable();
    });


    $(document).on("click", "#create-projectreport-dialog-save", function () {
        debugger;

        if (!$('#formProjectReport').valid()) {
            return;
        }
        if ($("#ReportDate").val() == "" || $("#Start_Date_Time").val() == "" || $("#End_Date_Time").val() == "" || $("#Resource_name").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var rid = $("#Resource_name").val();
        if (rid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }



        $("#formProjectReport").enctype = "multipart/form-data";
        $("#formProjectReport").type = "POST";
        var data = new FormData(document.forms.namedItem("formProjectReport"));

        $.ajax({
            url: 'ProjectReport/Create',
            data: data,
            cache: false,
            enctype: 'multipart/form-data',

            processData: false,
            contentType: false,
            type: 'POST',
            success: function (data) {
                if (data.value == "OK") {
                    $('#create-ProjectReport-dialog').modal('hide');
                }
                else {
                    alertDialog("Project report creation failed!")
                }
            }
        });

    });

    $(document).on("click", '#create-projectreport-dialog-Edit', function () {
        debugger;

        var id = $("#ProjectID").val();

        $("#formProjectEditReport").enctype = "multipart/form-data";
        $("#formProjectEditReport").type = "POST";
        var data = new FormData(document.forms.namedItem("formProjectEditReport"));

        $.ajax({
            url: 'ProjectReport/Edit',
            data: data,
            cache: false,
            enctype: 'multipart/form-data',
            processData: false,
            contentType: false,
            type: 'POST',
            success: function (data) {
                if (data.value == "OK") {

                    var url = "ProjectReport/Index/" + id;

                    $.get("ProjectReport/Index", { id: id }, function (data) {

                        $('#page-wrapper').html(data);
                    });

                    $('#create-ProjectReport-dialog').modal('hide');

                }
                else {
                    alertDialog("Project report edit failed!")
                }
            }
        });
    });

    $(document).on("click", "#edit-Project-dialog-Edit", function () {

        if (!$('#projectEditForm').valid()) {
            return;
        }

          $.post("Project/Edit", $('#projectEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Project').click();
                $('#create-Project-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Project update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    function DeleteQuote(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Quotation ?", DeleteQuoteConfirmed, null, id)
    }

    function DeleteQuoteConfirmed(id)
    {

        $.post("Quote/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Quotation").click();
            }
            else {
                alertDialog("Delete Quote failed")
            }
        });
    }


    function DeletePo(id)
    {

        confirmDialogYesorNo("Are you sure to delete this PO ?", DeletePoConfirmed, null, id)
    }

    function DeletePoConfirmed(id)
    {

        $.post("PurchaseOrder/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".PurchaseOrder").click();
            }
            else {
                alertDialog("Delete PO failed")
            }
        });
    }

    function DeletePR(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Project Report ?", DeletePRConfirmed, null, id)
    }

    function DeletePRConfirmed(id)
    {

        $.post("ProjectReport/DeletePR/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Project").click();

            }
            else {
                alertDialog("Delete Project Report failed")
            }
        });
    }





    function setQuoteDate(id,type) {

        $.post("Quote/getInvoiceDates", { id: id,@Html.AntiForgeryTokenForAjaxPost() }, function (data) {
            if (data.value == "OK") {
                $('#invDate').val(data.invDate);
                $('#doDate').val(data.doDate);
                //if (data.invReleased == "1")

                $('#Is_do_released').val(data.doReleased);
                $('#invReleased').val(data.invReleased);


                $('#invdochk').val(type);
                $('#quoteid').val(id);
                if (type == 'IV') {
                    $('#create-SetQuoteDate-dialog').modal('show')
                }
                if(type == 'WC')
                {
                    $('#create-SetWCDate-dialog').modal('show')
                }
            }
        })
    }

    function updateQuoteDate(chk) {
        var msg = "";
        if (chk == 'IV') {
            var st = $('#Is_do_released').val();

            if (st == null || st == '0' || st == "") {
               // alert("WC not released. Do you want to proceed?");
                msg = "WC not released. Also once Invoice released to client you can not change invoice and release WC. Do you want to proceed?";
                if ($('#invReleased').prop('checked'))
                    confirmDialogYesorNo(msg, updateQuoteDateConfirmed, null, 'IVwoDO')
                else
                    updateQuoteDateConfirmed('IV');

            }
            else {
                msg = "Once Invoice released to client you can not able to change invoice date.Do you want to proceed?";

                if ($('#invReleased').prop('checked'))
                    confirmDialogYesorNo(msg, updateQuoteDateConfirmed, null, 'IV')
                else
                    updateQuoteDateConfirmed('IV');
            }


        }

        if (chk == 'WC') {

            if ($('#doReleased').prop('checked'))
                confirmDialogYesorNo("Once WC released to client you can not able to change Do date. Are you sure want to proceed?", updateQuoteDateConfirmed, null, 'WC')
            else
                updateQuoteDateConfirmed('WC');
        }

    }


    function updateQuoteDateConfirmed(typ) {

        //create-QuoteDate-dialog-save
        debugger;
        if (typ == 'IV' || typ == 'IVwoDO') {
            var invInt = $('#invReleased').prop('checked') ? 1 : 0;

        }
        if (typ == 'WC') {
            var invInt = $('#doReleased').prop('checked') ? 1 : 0;

        }

        $.post("Quote/UpdateInvDoDate", { invDate: $('#invDate').val(), doDate: $('#doDate').val(), invReleased: invInt, QuoteID: $('#quoteid').val(), typeChk: typ, @Html.AntiForgeryTokenForAjaxPost() }, function (data) {
            if (data.value == "OK") {
                $('.Quotation').click();
                $('#create-SetQuoteDate-dialog').modal('hide')
            }
            else {
                alertDialog("Invoice and DO update failed!");
            }
        });
    }


    function setQuoteDateProject(id,typ) {
        debugger;
        $.post("Project/getInvoiceDates", { id: id,@Html.AntiForgeryTokenForAjaxPost() }, function (data) {
            if (data.value == "OK")
            {
                $('#invDate').val(data.invDate);
                $('#doDate').val(data.doDate);
                $('#Is_do_released').val(data.doReleased);
                $('#invReleased').val(data.invReleased);
                $('#projectid').val(id);
                $('#invdochk').val(typ);
                if (typ == 'IV') {
                    $('#create-SetQuoteDateProject-dialog').modal('show')
                }
                if (typ == 'WC') {
                    $('#create-SetWCDateProject-dialog').modal('show')
                }


            }
        })



    }

    function updateQuoteDateProject(chk) {


        if (chk == 'IV') {
            var st = $('#Is_do_released').val();

            if (st == null || st == '0' || st == "") {
                // alert("WC not released. Do you want to proceed?");
                msg = "WC not released. Also once Invoice released to client you can not change invoice and release WC. Do you want to proceed?";

                if ($('#invReleased').prop('checked'))
                    confirmDialogYesorNo(msg, updateQuoteDateProjectConfirmed, null, 'IVwoDO')
                else
                    updateQuoteDateProjectConfirmed('IV');

            }
            else {
                msg = "Once Invoice released to client you can not able to change invoice date.Do you want to proceed?";

                if ($('#invReleased').prop('checked'))
                    confirmDialogYesorNo(msg, updateQuoteDateProjectConfirmed, null, 'IV')
                else
                    updateQuoteDateProjectConfirmed('IV');
            }


        }

        if (chk == 'WC') {

            if ($('#doReleased').prop('checked'))
                confirmDialogYesorNo("Once WC released to client you can not able to change Do date. Are you sure want to proceed?", updateQuoteDateProjectConfirmed, null, 'WC')
            else
                updateQuoteDateProjectConfirmed('WC');
        }


    }

    function updateQuoteDateProjectConfirmed(typ) {
        debugger;
        if (typ == 'IV' || typ == 'IVwoDO') {
            var invInt = $('#invReleased').prop('checked') ? 1 : 0;
            //alert("IV" + invInt);
        }
        if (typ == 'WC') {
            var invInt = $('#doReleased').prop('checked') ? 1 : 0;
            //alert("WC" + invInt);
        }
        //create-QuoteDate-dialog-save

        $.post("Project/UpdateInvDoDate", { invDate: $('#invDate').val(), doDate: $('#doDate').val(), invReleased: invInt, projectID: $('#projectid').val(), typeChk: typ,@Html.AntiForgeryTokenForAjaxPost() }, function (data) {
            if (data.value == "OK") {
                $('.Project').click();
                $('#create-SetQuoteDateProject-dialog').modal('hide')
            }
            else {
                alertDialog("Invoice and DO update failed!");
            }
        });
    }

    function ViewCustomInvoices(id)
    {
        $.get("CustomInvoice/Index/"+id, function (data) {
            $('#page-wrapper').html(data);
        });
    }

    function ViewCustomDOs(id) {
        $.get("CustomInvoice/IndexDO/" + id, function (data) {
            $('#page-wrapper').html(data);
        });
    }


    function CreatecustomInvoice(id) {

        var url = 'CustomInvoice/Create/' + id
        $.get(url, function (data) {
            $('#create-createcustom-invoice-dialog-container').html(data);
            $('#create-createcustom-invoice-dialog').modal('show');
        });
    }


    function DeleteCustomInvoice(id, pjid) {
        debugger;
        var newid = id;
        var newpjid = pjid;

        var newstr = newid.concat(":", newpjid);

        confirmDialogYesorNo("Are you sure to delete this Custom Invoice ?", DeleteCustomInvoiceConfirmed, null, newstr)
    }

    function DeleteCustomInvoiceConfirmed(id)
    {
        debugger;
        var res = id.split(":");

        $.post("CustomInvoice/Delete/", { id: res[0],@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                ViewCustomInvoices(res[1]);
            }
            else {
                alertDialog("Delete Time Entry failed")
            }
        });
    }



    @*ViewCustomInvoices(@item.ProjectID)
    create - createcustom - invoice - dialog*@

    $(document).on("click", "#create-Custominvoice-dialog-save", function () {


        if ($("#InvoiceDate").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var pdt = $("#InvoiceDate").val();

        if (pdt == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }


        invoiceDesc = [];

        var totinvamt = 0;
        var finalamt = 0;
        var chkamt = 0;

        quotedescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            totinvamt = totinvamt + parseInt(data[1]) * parseFloat(data[3]);

            var object = { QDID: data[4], QuoteDescription: data[0], Quantity: parseInt(data[1]), UnitOfMeasure: data[2], QuotePrice: parseFloat(data[3]) }
            invoiceDesc.push(object);

        });

        if (invoiceDesc.length == 0) {
            alertDialog("Please add atleast one description");
            return false;
        }

        debugger;
        var ProjAmt = parseFloat($('#prjAmt').val());
        var InvAmt = parseFloat($('#invAmt').val());

        var QuoteAmt = parseFloat($('#QuoteFinalAmount').val());
        var disc = parseFloat($('#Discount').val());

        var gst = parseInt($('#GTAX').val());

        //if (disc == 0)
        //{
        //    chkamt = totinvamt + InvAmt;
        //}
        //else {
        //    chkamt = totinvamt + InvAmt;
        //}

        chkamt = totinvamt + InvAmt;

        if (disc == 0) {
            if (chkamt > ProjAmt) {
                alertDialog("Invoice Amount exceeds Project Cost");
                return false;
            }
        }
        else {
            if (chkamt > QuoteAmt) {
                alertDialog("Invoice Amount exceeds Quote Cost");
                return false;
            }

        }

        if (gst == 0)
        {
            finalamt = totinvamt + totinvamt * 7 / 100;
        }
        else
        {
            finalamt = totinvamt;
        }




        var id = $('#ProjectID').val();

        if ($('#invoiceForm').valid()) {
            var aform = $('#invoiceForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();
            $('#FinalInvoiceAmount').val(finalamt.toFixed(2));
            var eng_inv_master = {};
            $('#invoiceForm').serializeArray().map(function (x) { eng_inv_master[x.name] = x.value; });
            debugger;

            $.post("CustomInvoice/Create", { ProjectID: eng_inv_master.ProjectID, QuotationID: eng_inv_master.QuotationID, InvoiceDate: eng_inv_master.InvoiceDate, desc: invoiceDesc, deleted: deleteIDs, finalAmount: eng_inv_master.FinalInvoiceAmount, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {

                    var url = "CustomInvoice/Index/" + id;

                    $.get("CustomInvoice/Index", { id: id }, function (data) {

                        $('#page-wrapper').html(data);
                    });

                    $('#create-createcustom-invoice-dialog').modal('hide');


                }
                else {
                    alertDialog("Invoice creation failed!");
                }
            });
        }
    });

    $(document).on("click", "#create-receivable-dialog-save", function () {
        debugger;
        if (!$('#receivableForm').valid()) {
            return;
        }

        var rtyp = $('#ReceivableType').val();
        if (rtyp == 0) {
            alertDialog("Please select receivable type");
            return;
        }

        var cid = $("#ClientID").val();
        if (rtyp == 1) {
            if (cid == "x") {
                alertDialog("Please fill mandatory fields");
                return;
            }
        }

        if (rtyp == 1) {
            var qid = $('#DummyNo').val();
            var CAmt = parseFloat($('#Amount').val());
            var IAmt = parseFloat($('#TotAmt').val());
            var PAmt = parseFloat($('#AlreadyPaid').val());

            if ((CAmt + PAmt) > IAmt) {
                alertDialog("Amount to be received exceeds Invoice Amount");
                return;

            }

            var dummyid = $('#DummyNo option:selected').text();
            var dumid = $('#DummyNo option:selected').val();

            var invoid = dumid.split('_');
            var invid = invoid[1];

            var inid = dummyid.split('_');
            var invoicenum = inid[0];
            //var invtype = inid[2];

            $('#InvoiceNo').val(invoicenum);
            $('#InvoiceID').val(invid);
            if (cid == "0") {
                $('#ClientID').val(null);
            }

            // $('#InvoiceType').val(invtype);


        }


        if (rtyp == 2) {
            $('#ClientID').val(null);
            $('#InvoiceID').val(null);
            $('#TotAmt').val(0);
            $("#AlreadyPaid").val(0);
        }
        $.post("PaymentReceivable/Create", $('#receivableForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Receivable').click();
                $('#create-receivable-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Receivable Voucher Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-receivable-dialog-Edit", function () {

        if (!$('#receivableEditForm').valid()) {
            return;
        }

        debugger;
        var CAmt = parseFloat($('#Amount').val());
        var TAmt = parseFloat($('#TotAmt').val());
        var PAmt = parseFloat($('#AlreadyPaid').val());

        if (parseInt($('#ReceivableType').val()) != 2) {
            if ((PAmt + CAmt) > TAmt) {
                alertDialog("Amount to be received exceeds Invoice amount");
                return;
            }
        }


        $('#DummyNo').val("INV-001");

        $.post("PaymentReceivable/Edit", $('#receivableEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Receivable').click();
                $('#create-receivable-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Receivable Voucher update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });



    $(document).on("click", "#create-payable-dialog-save", function () {

        if (!$('#payableForm').valid()) {
            return;
        }

        var rtyp = $('#PayableType').val();
        if (rtyp == 0) {
            alertDialog("Please select payable type");
            return;
        }


        var sid = $("#SupplierID").val();
        if (rtyp == 1) {
            if (sid == "0") {
                alertDialog("Please select supplier name");
                return;
            }
        }

        if (rtyp == 1) {
            debugger;
            var qid = $('#NPoID').val();
            var posid = $('#NPoID option:selected').text();

            var quoid = qid.split('_');
            var poid = quoid[1];

            var puid = posid.split('_');
            var prid = puid[0];

            $('#PoID').val(poid);
            $('#PoNo').val(prid);

            $('#ClaimID').val(null);
            $('#EmpID').val(null);
            $('#ClaimNo').val(null);

        }

        if (rtyp == 2) {
            debugger;
            var empid = $('#DummyEmp').val();
            if (empid == "0") {
                alertDialog("Please select Employee name");
                return;
            }

            var clmid = $('#ClaimNo option:selected').val();

            var clid = clmid.split('_');
            var claimid = clid[1];

            $('#PoID').val(null);
            $('#PoNo').val(null);

            $('#SupplierID').val(null);

            $('#ClaimID').val(claimid);
            $('#EmpID').val(empid);

        }

        if (rtyp == 3) {
            debugger;
            var empid = $('#EmpID').val();

            if (empid == "0") {
                alertDialog("Please select Employee name");
                return;
            }


            $('#PoID').val(null);
            $('#PoNo').val(null);

            $('#ClaimID').val(null);
            $('#ClaimNo').val(null);
            $('#SupplierID').val(null);


        }

        if (rtyp == 4) {
            debugger;
            var refchk = $('#PoNo').val();
            if (refchk == '') {
                alertDialog("Please fill Other Reference");
                return;
            }
            if (refchk == null) {
                alertDialog("Please fill Other Reference");
                return;
            }


            $('#PoID').val(null);


            $('#ClaimID').val(null);
            $('#ClaimNo').val(null);
            $('#SupplierID').val(null);
            $('#EmpID').val(null);
        }
        var Amt = parseFloat($('#Amount').val());

        if (Amt <= 0)
        {
            alertDialog("Amount Should be greater than 0");
            return;
        }



        $.post("PaymentPayable/Create", $('#payableForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Payable').click();
                $('#create-payable-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Payable Voucher Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-payable-dialog-Edit", function () {

        if (!$('#payableEditForm').valid()) {
            return;
        }


        $.post("PaymentPayable/Edit", $('#payableEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Payable').click();
                $('#create-payable-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Payable Voucher update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-po-dialog-save", function () {

        if ($("#PoDate").val() == "" || $("#SupplierID").val() == "" || $("#DeliveryAddress").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var sid = $("#SupplierID").val();
        var did = $("#DeliveryAddress").val();
        if (sid == null || did == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#poForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        podescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { PODescription: data[0], Quantity: parseInt(data[1]), UnitOfMeasure: data[2], PoPrice: parseFloat(data[3]) }
            contacts.push(object);

        });


        if ($('#poForm').valid()) {

            if (contacts.length == 0) {
                alertDialog("Please add atleast one description");
                return false;
            }

            var aform = $('#poForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_po_master = {};
            $('#poForm').serializeArray().map(function (x) { eng_po_master[x.name] = x.value; });
            debugger;

            $.post("PurchaseOrder/Create", { eng_po_master: eng_po_master, poDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.PurchaseOrder').click();
                }
                else {
                    alertDialog("PO creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-poEdit-dialog-save", function () {

        podescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();


            var object = { PDID: data[4], PODescription: data[0], Quantity: parseInt(data[1]), UnitOfMeasure: data[2], PoPrice: parseFloat(data[3]) }
            contacts.push(object);

        });

        if (contacts.length == 0) {
            alertDialog("Please add atleast one description");
            return false;
        }

        if ($('#poEditForm').valid()) {
            var aform = $('#poEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_po_master = {};
            $('#poEditForm').serializeArray().map(function (x) { eng_po_master[x.name] = x.value; });


            $.post("PurchaseOrder/Edit", { eng_po_master: eng_po_master, poDescription: contacts, deleted: deleteIDs, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.PurchaseOrder').click();
                }
                else {
                    alertDialog("PO update failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-Company-dialog-save", function () {

        if (!$('#companyForm').valid()) {
            return;
        }

        $("#companyForm").enctype = "multipart/form-data";
        $("#companyForm").type = "POST";
        var data = new FormData(document.forms.namedItem("companyForm"));

        $.ajax({
            url: 'Company/Index',
            data: data,
            cache: false,
            enctype: 'multipart/form-data',

            processData: false,
            contentType: false,
            type: 'POST',
            success: function (data) {
                if (data.value == "OK") {
                    $('.Company').click();
                    alertDialog("Save Successful!");
                }
                else {
                    alertDialog("Company Updation failed!")
                }
            }
        });


    });

    $(document).on("click", "#create-claim-dialog-save", function () {



        if ($("#SubmittedDate").val() == "" || $("#ProjectID").val() == "" || $("#UserID").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var pid = $("#ProjectID").val();
        var uid = $("#UserID").val();
        if (uid == null || pid==null)
        {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#claimForm').valid()) {
            return;
        }

          claimdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();
            debugger;
            var object = { ClaimTypeID: parseInt(data[1]), ClaimDescription: data[2], RecpDate: data[3], RecpAmount: parseFloat(data[4]), GST: data[5] }
            contacts.push(object);
            //domains_0__order_by
          //  domains[0].order_by
            $('#claimForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__ClaimTypeID' name='eng_claim_description[" + rowIdx + "].ClaimTypeID' value='" + parseInt(data[1]) + "' />");
            $('#claimForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__ClaimDescription' name='eng_claim_description[" + rowIdx + "].ClaimDescription' value='" + data[2] + "' />");
            $('#claimForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__RecpDate' name='eng_claim_description[" + rowIdx + "].RecpDate' value='" + data[3] + "' />");
            $('#claimForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__RecpAmount' name='eng_claim_description[" + rowIdx + "].RecpAmount' value='" + parseFloat(data[4]) + "' />");
            $('#claimForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__GST' name='eng_claim_description[" + rowIdx + "].GST' value='" + data[5] + "' />");
        });
        if (contacts.length == 0) {
            alertDialog("Please add atleast one description");
            return false;
        }


        if ($('#claimForm').valid()) {

           // var aform = $('#claimForm');
           // var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            if ($('#ClaimAgainst').val() != 'Project')
            {
                $('#ProjectID').val(null);
            }

            //var eng_claim = {};
            //$('#claimForm').serializeArray().map(function (x) { eng_claim[x.name] = x.value; });
           debugger;
            var eng_claim = new FormData(document.forms.namedItem("claimForm"));



            $.ajax({
                url: 'Claim/Create',
                data: eng_claim,
                cache: false,
                enctype: 'multipart/form-data',

                processData: false,
                contentType: false,
                type: 'POST',
                success: function (data) {
                    if (data.value == "OK") {
                        $('.ExpenseEntry').click();
                    }
                    else {
                        alertDialog("Claim creation failed!");
                    }
                }
            });
            //$.post("Claim/Create", { eng_claim: eng_claim, claimDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
            //    if (data.value == "OK") {
            //        $('.Claims').click();
            //    }
            //    else {
            //        alertDialog("Claim creation failed!");
            //    }
            //});
        }
    });


    $(document).on("click", "#create-claimEdit-dialog-save", function () {

        claimdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            debugger;
            var data = this.data();
            var ctypeVal = data[0];
            var ctypeId = 0;
            if (ctypeVal == "Transport")
                ctypeId = 1;
            if (ctypeVal == "Meals")
                ctypeId = 2;
            if (ctypeVal == "Medical")
                ctypeId = 3;
            if (ctypeVal == "Miscellaneous")
                ctypeId = 4;



            var object = { ClaimDescID: data[5], ClaimTypeID: ctypeId, ClaimDescription: data[1], RecpDate: data[2], RecpAmount: parseFloat(data[3]), GST: data[4] }
            contacts.push(object);

            $('#claimEditForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__ClaimDescID' name='eng_claim_description[" + rowIdx + "].ClaimDescID' value='" + parseInt(data[5]) + "' />");
            $('#claimEditForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__ClaimTypeID' name='eng_claim_description[" + rowIdx + "].ClaimTypeID' value='" + ctypeId + "' />");
            $('#claimEditForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__ClaimDescription' name='eng_claim_description[" + rowIdx + "].ClaimDescription' value='" + data[1] + "' />");
            $('#claimEditForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__RecpDate' name='eng_claim_description[" + rowIdx + "].RecpDate' value='" + data[2] + "' />");
            $('#claimEditForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__RecpAmount' name='eng_claim_description[" + rowIdx + "].RecpAmount' value='" + parseFloat(data[3]) + "' />");
            $('#claimEditForm').append("<input type='hidden' id='eng_claim_description_" + rowIdx + "__GST' name='eng_claim_description[" + rowIdx + "].GST' value='" + data[4] + "' />");


        });

        if (contacts.length == 0) {
            alertDialog("Please add atleast one description");
            return false;
        }

        if ($('#claimEditForm').valid()) {

            // var aform = $('#claimForm');
            // var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            if ($('#ClaimAgainst').val() != 'Project')
            {
                $('#ProjectID').val(null);
            }

            //var eng_claim = {};
            //$('#claimForm').serializeArray().map(function (x) { eng_claim[x.name] = x.value; });
            debugger;
            var eng_claim = new FormData(document.forms.namedItem("claimEditForm"));

            $.ajax({
                url: 'Claim/Edit',
                data: eng_claim,
                cache: false,
                enctype: 'multipart/form-data',

                processData: false,
                contentType: false,
                type: 'POST',
                success: function (data) {
                    if (data.value == "OK") {
                        $('.ExpenseEntry').click();
                    }
                    else {
                        alertDialog("Claim updation failed!");
                    }
                }
            });
        }

    });


    $(document).on("click", "#create-claimApprove-dialog-save", function () {
        debugger;

        var sts = $("#ClaimStatus").val();

        //if (sts == 0) {
        //    alertDialog("Please Select Approval Status");
        //    return;
        //}


        if ($("#ApprovalRemarks").val() == "") {
            alertDialog("Please fill Approval remarks");
            return;
        }

        if ($('#claimEditForm').valid()) {

            var appltext = $('#ApprovalRemarks').val();
            var id = $('#ClaimID').val();

            if (sts == 1) {
                $.post("Claim/ApproveOrRejectClaim/", { id: id, remarks: appltext, flag: 1, @Html.AntiForgeryTokenForAjaxPost() }, function (data) {
                    if (data.value == "OK") {
                        $(".ExpenseEntry").click();
                        return;
                    }
                    else {
                        alertDialog("Approve Claim failed")
                    }
                });
            }

            if (sts == 2)
            {
                $.post("Claim/ApproveOrRejectClaim/", { id: id, remarks: appltext, flag: 2, @Html.AntiForgeryTokenForAjaxPost()}, function (data) {
                    if (data.value == "OK") {
                        $(".ExpenseEntry").click();
                        return;
                    }
                    else {
                        alertDialog("Reject claim failed")
                    }
                });
            }

        }

    });

    @*$(document).on("click", "#create-claimReject-dialog-save", function () {

        if ($("#RejectRemarks").val() == "") {
            alertDialog("Please fill Rejection remarks");
            return;
        }

        if ($('#claimEditForm').valid()) {

            var appltext = $('#RejectRemarks').val();
            var id = $('#ClaimID').val();


            $.post("Claim/ApproveOrRejectClaim/", { id: id, remarks: appltext, flag: 2, @Html.AntiForgeryTokenForAjaxPost()}, function (data) {
                if (data.value == "OK") {
                    $(".Claims").click();
                    return;
                }
                else {
                    alertDialog("Reject claim failed")
                }
            });


            }

    });*@


    //$(document).on("click", "#create-menu-dialog-save", function () {

    //    var mdl = $("#ModuleID").val();
    //    var grp = $("#GroupID").val();
    //    if (mdl == 0 || grp == 0) {
    //        alertDialog("Please Select Group Name / Module Name");
    //        return;
    //    }

    //    if (!$('#menuForm').valid()) {
    //        return;
    //    }

    //    $.post("User/CreateMenu", $('#menuForm').serialize(), function (data) {

    //        if (data.value == "OK") {
    //            $('.Menu').click();
    //            $('#create-menu-dialog').modal('hide');
    //        }
    //        else if (data.value == "Failed") {
    //            alertDialog("User Creation Failed!");
    //        }
    //        else {
    //            alertDialog(data.value);
    //        }

    //    });
    //});



    $(document).on("click", "#create-user-dialog-save", function () {

        debugger;
        var emp = $("#EmpID").val();
        if (emp == 0) {
            alertDialog("Please Select Employee");
            return;
        }

        if (!$('#userForm').valid()) {
            return;
        }


        $.post("User/Create", $('#userForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Users').click();
                $('#create-user-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("User Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-user-dialog-Edit", function () {


        if (!$('#userEditForm').valid()) {
            return;
        }


        $.post("User/Edit", $('#userEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Users').click();
                $('#create-user-dialog').modal('hide');
                alertDialog("Save Successful!");

            }
            else if (data.value == "Failed") {
                alertDialog("User update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    function CreateQualityDefect() {
        var url = $('#create-qualitydefect-dialog').data('url');

        $.get(url, function (data) {

            $('#page-wrapper').html(data);
        });
    }

    function EditQualityDefect(id) {
        $.get("QualityDefect/Edit/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }


    function CreateDefectDetail() {
        debugger;
        var url = $('#create-DefectDetail-dialog').data('url');
        $.get(url, function (data) {
            $('#create-DefectDetail-dialog-container').html(data);
            $('#create-DefectDetail-dialog').modal('show');
            $('#create-DefectDetail-dialog').css('z-index', '10000');
        });

    }

    function CreateDefectDetailEdit(id) {

        $.get("QualityDefect/CreateDefectDetail/" + id, function (data) {
            $('#create-DefectDetail-dialog-container').html(data);
            $('#create-DefectDetail-dialog').modal('show');
            $('#create-DefectDetail-dialog').css('z-index', '10000');
        });

    }


    $(document).on("click", "#create-DefectDetail-dialog-save", function () {
        addDataToDataTable();
    });

    $(document).on("click", "#create-qualitydefect-dialog-save", function () {



        if ($("#InspectedDate").val() == "" || $("#ProjectID").val() == "" || $("#InspectedBy").val() == "" || $("#PM_Incharge").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var pid = $("#ProjectID").val();
        var uid = $("#InspectedBy").val();
        var mid = $("#PM_Incharge").val();
        if (uid == null || pid == null || mid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#qualityForm').valid()) {
            return;
        }

        defectdetailTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();
            debugger;
            var object = { DefectTrackNum: data[0], DefectTitle: data[1], DefectImpactDetails: data[2], DefectStatus: data[3] }
            contacts.push(object);
            //domains_0__order_by
            //  domains[0].order_by
            $('#qualityForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectTrackNum' name='eng_qa_defect_detail[" + rowIdx + "].DefectTrackNum' value='" + data[0] + "' />");
            $('#qualityForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectTitle' name='eng_qa_defect_detail[" + rowIdx + "].DefectTitle' value='" + data[1] + "' />");
            $('#qualityForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectImpactDetails' name='eng_qa_defect_detail[" + rowIdx + "].DefectImpactDetails' value='" + data[2] + "' />");
            $('#qualityForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectStatus' name='eng_qa_defect_detail[" + rowIdx + "].DefectStatus' value='" + data[3] + "' />");

        });
        if (contacts.length == 0) {
            alertDialog("Please add atleast one description");
            return false;
        }


        if ($('#qualityForm').valid()) {

            // var aform = $('#claimForm');
            // var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            debugger;

            if ($("#SupplierFlag").is(':checked'))
                var tst = 0;  // checked
            else
                $("#SupplierID").val(null);

            //var eng_claim = {};
            //$('#claimForm').serializeArray().map(function (x) { eng_claim[x.name] = x.value; });

            var eng_qa_defect = new FormData(document.forms.namedItem("qualityForm"));
            eng_qa_defect.SupplierFlag = $('#SupplierFlag').prop('checked') == true;

            $.ajax({
                url: 'QualityDefect/Create',
                data: eng_qa_defect,
                cache: false,
                enctype: 'multipart/form-data',

                processData: false,
                contentType: false,
                type: 'POST',
                success: function (data) {
                    if (data.value == "OK") {
                        $('.QualityInspection').click();
                    }
                    else {
                        alertDialog("Quality Defect creation failed!");
                    }
                }
            });

        }
    });

    $(document).on("click", "#create-qualityEdit-dialog-save", function () {

        defectdetailTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();
            debugger;
            var object = { DefectDetailID: data[4], DefectTrackNum: data[0], DefectTitle: data[1], DefectImpactDetails: data[2], DefectStatus: data[3] }
            contacts.push(object);
            //domains_0__order_by
            //  domains[0].order_by
            $('#qualityEditForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectDetailID' name='eng_qa_defect_detail[" + rowIdx + "].DefectDetailID' value='" + parseInt(data[4]) + "' />");
            $('#qualityEditForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectTrackNum' name='eng_qa_defect_detail[" + rowIdx + "].DefectTrackNum' value='" + data[0] + "' />");
            $('#qualityEditForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectTitle' name='eng_qa_defect_detail[" + rowIdx + "].DefectTitle' value='" + data[1] + "' />");
            $('#qualityEditForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectImpactDetails' name='eng_qa_defect_detail[" + rowIdx + "].DefectImpactDetails' value='" + data[2] + "' />");
            $('#qualityEditForm').append("<input type='hidden' id='eng_qa_defect_detail_" + rowIdx + "__DefectStatus' name='eng_qa_defect_detail[" + rowIdx + "].DefectStatus' value='" + data[3] + "' />");

        });
        if (contacts.length == 0) {
            alertDialog("Please add atleast one description");
            return false;
        }

        if ($('#qualityEditForm').valid()) {

            // var aform = $('#claimForm');
            // var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            if ($("#SupplierFlag").is(':checked'))
                var tst = 0;  // checked
            else
                $("#SupplierID").val(null);

            //var eng_claim = {};
            //$('#claimForm').serializeArray().map(function (x) { eng_claim[x.name] = x.value; });
            debugger;
            var eng_qa_defect = new FormData(document.forms.namedItem("qualityEditForm"));
            eng_qa_defect.SupplierFlag = $('#SupplierFlag').prop('checked') == true;

            $.ajax({
                url: 'QualityDefect/Edit',
                data: eng_qa_defect,
                cache: false,
                enctype: 'multipart/form-data',

                processData: false,
                contentType: false,
                type: 'POST',
                success: function (data) {
                    if (data.value == "OK") {
                        $('.QualityInspection').click();
                    }
                    else {
                        alertDialog("Defect updation failed!");
                    }
                }
            });
        }

    });

    function DeleteQualityDefect(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Defect?", DeleteQualityDefectConfirmed, null, id)
    }

    function DeleteQualityDefectConfirmed(id)
    {
        debugger;
        $.post("QualityDefect/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".QualityInspection").click();
            }
            else {
                alertDialog("Delete Defect failed")
            }
        });
    }

    function AddEditCPA(id) {
        $.get("QualityDefect/DTEdit/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }

    function ViewCPA(id) {
        $.get("QualityDefect/DTDetails/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }



    $(document).on("click", "#create-CpaAddEdit-dialog-save", function () {

        if (!$('#cpaForm').valid()) {
            return;
        }

        debugger;
        if ($("#ActionTaken").val() == "" || $("#ActionBy").val() == "" || $("#ReviewedBy").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var atid = $("#ActionTaken").val();
        var abid = $("#ActionBy").val();
        var rbid = $("#ReviewedBy").val();
        if (atid == null || abid == null || rbid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }


        if ($('#cpaForm').valid()) {


            //var eng_claim = {};
            //$('#claimForm').serializeArray().map(function (x) { eng_claim[x.name] = x.value; });
            debugger;
            var eng_qa_defect_cpa = new FormData(document.forms.namedItem("cpaForm"));
            eng_qa_defect_cpa.CAflag = $('#CAflag').prop('checked') == true;
            eng_qa_defect_cpa.PAflag = $('#PAflag').prop('checked') == true;
            eng_qa_defect_cpa.ipt_envmt = $('#ipt_envmt').prop('checked') == true;
            eng_qa_defect_cpa.ipt_safety = $('#ipt_safety').prop('checked') == true;
            eng_qa_defect_cpa.ipt_health = $('#ipt_health').prop('checked') == true;
            eng_qa_defect_cpa.ipt_insandops = $('#ipt_insandops').prop('checked') == true;
            eng_qa_defect_cpa.ipt_suggestion = $('#ipt_suggestion').prop('checked') == true;

            eng_qa_defect_cpa.rfp_ncps = $('#rfp_ncps').prop('checked') == true;
            eng_qa_defect_cpa.rfp_mgmtreview = $('#rfp_mgmtreview').prop('checked') == true;
            eng_qa_defect_cpa.rfp_cc = $('#rfp_cc').prop('checked') == true;
            eng_qa_defect_cpa.rfp_ea = $('#rfp_ea').prop('checked') == true;
            eng_qa_defect_cpa.rfp_other = $('#rfp_other').prop('checked') == true;

            $.ajax({
                url: 'QualityDefect/AddEditCpa',
                data: eng_qa_defect_cpa,
                cache: false,
                enctype: 'multipart/form-data',

                processData: false,
                contentType: false,
                type: 'POST',
                success: function (data) {
                    if (data.value == "OK") {
                        $('.DefectTracking').click();
                    }
                    else {
                        alertDialog("Defect Tracking updation failed!");
                    }
                }
            });
        }

    });


    $(document).on("click", "#create-safety-dialog-save", function () {
        var ptitle = $("#ProjectTitle").val();
        if (ptitle == null || ptitle == '')
        {
            alertDialog("Please select project title");
            return;

        }

        var hazardValues = [];
        $('input[type=checkbox][id^="HazardCheckBoxList_"]:checked').each(function () {
            hazardValues.push($(this).val());
        });

        //if (hazardValues.length > 0) {
        //    alert("Selected Value(s): " + hazardValues);
        //} else {
        //    alert("No item has been selected.");
        //}


        var ppeValues = [];
        $('input[type=checkbox][id^="PPECheckBoxList_"]:checked').each(function () {
            ppeValues.push($(this).val());
        });


        //if (ppeValues.length > 0) {
        //    alert("Selected Value(s): " + ppeValues);
        //} else {
        //    alert("No item has been selected.");
        //}

        var workerValues = [];
        $('input[type=checkbox][id^="WorkerCheckBoxList_"]:checked').each(function () {
            workerValues.push($(this).val());
        });

        if (workerValues.length == 0) {
            alertDialog("Please select atleast one Worker");
            return false;
        }

        //if (workerValues.length > 0) {
        //    alert("Selected Value(s): " + workerValues);
        //} else {
        //    alert("No item has been selected.");
        //}


        if ($('#safetyForm').valid()) {
            var aform = $('#safetyForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();
            debugger;
            var eng_safety_master = {};
            $('#safetyForm').serializeArray().map(function (x) { eng_safety_master[x.name] = x.value; });
            //eng_quote_master.isAutoApproved = $('#isAutoApproved').prop('checked') == true;
            //eng_quote_master.isProjectCreated = $('#isProjectCreated').prop('checked') == true;

            $.post("Safety/Create", { eng_safety_master: eng_safety_master, hazardList: hazardValues, ppeList: ppeValues, workerList: workerValues, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.DTTR').click();
                }
                else {
                    alertDialog("DTTR creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-safetyEdit-dialog-save", function () {

        var hazardValues = [];
        $('input[type=checkbox][id^="HazardCheckBoxList_"]:checked').each(function () {
            hazardValues.push($(this).val());
        });


        var ppeValues = [];
        $('input[type=checkbox][id^="PPECheckBoxList_"]:checked').each(function () {
            ppeValues.push($(this).val());
        });


        var workerValues = [];
        $('input[type=checkbox][id^="WorkerCheckBoxList_"]:checked').each(function () {
            workerValues.push($(this).val());
        });

        if (workerValues.length == 0) {
            alertDialog("Please select atleast one Worker");
            return false;
        }

        if ($('#safetyEditForm').valid()) {
            var aform = $('#safetyEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();
            debugger;
            var eng_safety_master = {};
            $('#safetyEditForm').serializeArray().map(function (x) { eng_safety_master[x.name] = x.value; });


            $.post("Safety/Edit", { eng_safety_master: eng_safety_master, hazardList: hazardValues, ppeList: ppeValues, workerList: workerValues, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.DTTR').click();
                }
                else {
                    alertDialog("DTTR updation failed!");
                }
            });
        }
    });


    function DeleteSafety(id)
    {

        confirmDialogYesorNo("Are you sure to delete this DTTR ?", DeleteSafetyConfirmed, null, id)
    }

    function DeleteSafetyConfirmed(id)
    {

        $.post("Safety/Delete/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".DTTR").click();
            }
            else {
                alertDialog("Delete DTTR failed")
            }
        });
    }

    function EditSafety(id) {
        $.get("Safety/Edit/" + id, function (data) {
            //$('#create-client-dialog-container').html(data);
            //$('#create-client-dialog').modal('show');
            $('#page-wrapper').html(data);
        });
    }


    $(document).on("click", "#create-store-dialog-save", function () {

        if (!$('#storeForm').valid()) {
            return;
        }


        $.post("MaterialManagement/CreateStore", $('#storeForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Store').click();
                $('#create-store-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Store Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });

    $(document).on("click", "#create-store-dialog-Edit", function () {

        if (!$('#storeEditForm').valid()) {
            return;
        }


        $.post("MaterialManagement/EditStore", $('#storeEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Store').click();
                $('#create-store-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Store update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#create-inward-dialog-save", function () {
        debugger;

        if ($("#Received_Date").val() == "" || $("#Invoice_or_DO_Date").val() == "" || $("#Invoice_or_DO_Number").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Received_Date").val();
        var bid = $("#Invoice_or_DO_Date").val();
        var cid = $("#Invoice_or_DO_Number").val();

        if (aid == null || bid == null || cid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#inwardForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        inwdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#inwardForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#SupplierID').val() == '0') {
                $('#SupplierID').val(null);
            }

            var aform = $('#inwardForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_inward = {};
            $('#inwardForm').serializeArray().map(function (x) { eng_inward[x.name] = x.value; });
            debugger;
            eng_inward.PID = 0;
            eng_inward.DraftFlag = 1;
            $.post("MaterialManagement/CreateInward", { eng_inward: eng_inward, inwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Inward').click();
                }
                else {
                    alertDialog("Inward creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-inwardDraft-dialog-save", function () {
        debugger;

        if ($("#Received_Date").val() == "" || $("#Invoice_or_DO_Date").val() == "" || $("#Invoice_or_DO_Number").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Received_Date").val();
        var bid = $("#Invoice_or_DO_Date").val();
        var cid = $("#Invoice_or_DO_Number").val();

        if (aid == null || bid == null || cid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#inwardForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        inwdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#inwardForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#SupplierID').val() == '0') {
                $('#SupplierID').val(null);
            }

            var aform = $('#inwardForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_inward = {};
            $('#inwardForm').serializeArray().map(function (x) { eng_inward[x.name] = x.value; });
            debugger;
            eng_inward.PID = 0;
            eng_inward.DraftFlag = 0;
            $.post("MaterialManagement/CreateInward", { eng_inward: eng_inward, inwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Inward').click();
                }
                else {
                    alertDialog("Inward Draft creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-inward-dialog-Edit", function () {
        debugger;

        if ($("#Received_Date").val() == "" || $("#Invoice_or_DO_Date").val() == "" || $("#Invoice_or_DO_Number").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Received_Date").val();
        var bid = $("#Invoice_or_DO_Date").val();
        var cid = $("#Invoice_or_DO_Number").val();

        if (aid == null || bid == null || cid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#inwardEditForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        inwdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#inwardEditForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#SupplierID').val() == '0') {
                $('#SupplierID').val(null);
            }

            var aform = $('#inwardEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_inward = {};
            $('#inwardEditForm').serializeArray().map(function (x) { eng_inward[x.name] = x.value; });
            debugger;
            eng_inward.PID = 0;
            eng_inward.DraftFlag = 1;
            $.post("MaterialManagement/EditInward", { eng_inward: eng_inward, inwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Inward').click();
                }
                else {
                    alertDialog("Inward Draft update failed!");
                }
            });
        }
    });



    $(document).on("click", "#create-inwardDraft-dialog-Edit", function () {
        debugger;

        if ($("#Received_Date").val() == "" || $("#Invoice_or_DO_Date").val() == "" || $("#Invoice_or_DO_Number").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Received_Date").val();
        var bid = $("#Invoice_or_DO_Date").val();
        var cid = $("#Invoice_or_DO_Number").val();

        if (aid == null || bid == null || cid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#inwardEditForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        inwdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#inwardEditForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#SupplierID').val() == '0') {
                $('#SupplierID').val(null);
            }

            var aform = $('#inwardEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_inward = {};
            $('#inwardEditForm').serializeArray().map(function (x) { eng_inward[x.name] = x.value; });
            debugger;
            eng_inward.PID = 0;
            eng_inward.DraftFlag = 0;
            $.post("MaterialManagement/EditInward", { eng_inward: eng_inward, inwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Inward').click();
                }
                else {
                    alertDialog("Inward Draft update failed!");
                }
            });
        }
    });




    $(document).on("click", "#create-outward-dialog-save", function () {
        debugger;

        if ($("#Delivery_Date").val() == "" || $("#DO_Number").val() == "" || $("#DO_Date").val() == "" || $("#Project_Location").val() == "" || $("#Delivery_Mode").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Delivery_Date").val();
        var bid = $("#DO_Number").val();
        var cid = $("#DO_Date").val();
        var did = $("#Project_Location").val();
        var eid = $("#Delivery_Mode").val();

        if (aid == null || bid == null || cid == null || did == null || eid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#outwardForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        outdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#outwardForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#ClientID').val() == '0') {
                $('#ClientID').val(null);
            }

            var aform = $('#outwardForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_outward = {};
            $('#outwardForm').serializeArray().map(function (x) { eng_outward[x.name] = x.value; });
            debugger;
            eng_outward.PID = 0;
            eng_outward.DraftFlag = 1;
            $.post("MaterialManagement/CreateOutward", { eng_outward: eng_outward, outwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Outward').click();
                }
                else {
                    alertDialog("Outward creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-outwardDraft-dialog-save", function () {
        debugger;

        if ($("#Delivery_Date").val() == "" || $("#DO_Number").val() == "" || $("#DO_Date").val() == "" || $("#Project_Location").val() == "" || $("#Delivery_Mode").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Delivery_Date").val();
        var bid = $("#DO_Number").val();
        var cid = $("#DO_Date").val();
        var did = $("#Project_Location").val();
        var eid = $("#Delivery_Mode").val();

        if (aid == null || bid == null || cid == null || did == null || eid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#outwardForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        outdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#outwardForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#ClientID').val() == '0') {
                $('#ClientID').val(null);
            }

            var aform = $('#outwardForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_outward = {};
            $('#outwardForm').serializeArray().map(function (x) { eng_outward[x.name] = x.value; });
            debugger;
            eng_outward.PID = 0;
            eng_outward.DraftFlag = 0;
            $.post("MaterialManagement/CreateOutward", { eng_outward: eng_outward, outwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Outward').click();
                }
                else {
                    alertDialog("Outward Draft creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#create-outward-dialog-Edit", function () {
        debugger;

        if ($("#Delivery_Date").val() == "" || $("#DO_Number").val() == "" || $("#DO_Date").val() == "" || $("#Project_Location").val() == "" || $("#Delivery_Mode").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Delivery_Date").val();
        var bid = $("#DO_Number").val();
        var cid = $("#DO_Date").val();
        var did = $("#Project_Location").val();
        var eid = $("#Delivery_Mode").val();

        if (aid == null || bid == null || cid == null || did == null || eid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#outwardEditForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        outdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#outwardEditForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#ClientID').val() == '0') {
                $('#ClientID').val(null);
            }

            var aform = $('#outwardEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_outward = {};
            $('#outwardEditForm').serializeArray().map(function (x) { eng_outward[x.name] = x.value; });
            debugger;
            eng_outward.PID = 0;
            eng_outward.DraftFlag = 1;
            $.post("MaterialManagement/EditOutward", { eng_outward: eng_outward, outwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Outward').click();
                }
                else {
                    alertDialog("Outward update failed!");
                }
            });
        }
    });



    $(document).on("click", "#create-outwardDraft-dialog-Edit", function () {
        debugger;

        if ($("#Delivery_Date").val() == "" || $("#DO_Number").val() == "" || $("#DO_Date").val() == "" || $("#Project_Location").val() == "" || $("#Delivery_Mode").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = $("#Delivery_Date").val();
        var bid = $("#DO_Number").val();
        var cid = $("#DO_Date").val();
        var did = $("#Project_Location").val();
        var eid = $("#Delivery_Mode").val();

        if (aid == null || bid == null || cid == null || did == null || eid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (!$('#outwardEditForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        outdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { ProductID: parseInt(data[1]), Quantity: parseInt(data[4]), UoM: data[3], Remarks: data[5] }
            contacts.push(object);


        });


        if ($('#outwardEditForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one product");
                return false;
            }

            if ($('#ClientID').val() == '0') {
                $('#ClientID').val(null);
            }

            var aform = $('#outwardEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_outward = {};
            $('#outwardEditForm').serializeArray().map(function (x) { eng_outward[x.name] = x.value; });
            debugger;
            eng_outward.PID = 0;
            eng_outward.DraftFlag = 0;
            $.post("MaterialManagement/EditOutward", { eng_outward: eng_outward, outwardDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Outward').click();
                }
                else {
                    alertDialog("Outward update failed!");
                }
            });
        }
    });

    $(document).on("click", "#create-stockadj-dialog-save", function () {

        if ($("#Adj_Ref_Date").val() == "" || $("#Adj_Ref_Number").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var aid = parseInt($("#StoreID").val());
        var bid = $("#Adj_Ref_Number").val();
        var cid = $("#Adj_Ref_Date").val();

        var pid = $("#ProductID").val();

        var qtyid = $("#Quantity").val();
        debugger;
        if (aid == 0)
        {
            alertDialog("Please Select Store");
            return;
        }

        if (bid == null || cid == null) {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (pid == null || pid == '')
        {
            alertDialog("Please add Product ");
            return;
        }

        if (qtyid == "" || parseInt(qtyid) == 0 || parseInt(qtyid) < 0) {
            alertDialog("Quantity should be > 0 ");
            return;
        }




        if (!$('#stockadjForm').valid()) {
            return;
        }


        $.post("MaterialManagement/CreateStockAdjust", $('#stockadjForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.StockTaking').click();
                $('#create-stockadj-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Stock Adjustment Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#create-newsafetyinspection-dialog-save", function () {
        debugger;

        if (!$('#formNewSafetyInspection').valid()) {
            return;
        }
        if ($("#InspectionDate").val() == "" ) {
            alertDialog("Please fill mandatory fields");
            return;
        }


        $("#formNewSafetyInspection").enctype = "multipart/form-data";
        $("#formNewSafetyInspection").type = "POST";
        var data = new FormData(document.forms.namedItem("formNewSafetyInspection"));

        $.ajax({
            url: 'Safety/NewSICreate',
            data: data,
            cache: false,
            enctype: 'multipart/form-data',

            processData: false,
            contentType: false,
            type: 'POST',
            success: function (data) {
                if (data.value == "OK") {
                    $('.SafInsNew').click();
                    $('#create-SI-dialog').modal('hide');
                }
                else {
                    alertDialog("Safety Inspection report cration failed!")
                }
            }
        });

    });

    $(document).on("click", '#edit-newsafetyinspection-dialog-save', function () {
        debugger;

        var object = {};
        contacts = [];
        contactTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { FileName: data[0], Image: parseInt(data[1]) }
            contacts.push(object);

        });

        var val = $('#files').val();

        if (contacts.length != 0 && val != '')
        {
            alertDialog("Please delete old file or deselect new file!");
            return false;
        }

        if (contacts.length == 0)
        {
            $('#FileName').val(null);
            $('#FileCaption').val(null);
            $('#FilePath').val(null);
        }


        $("#formNewSafetyInspectionEdit").enctype = "multipart/form-data";
        $("#formNewSafetyInspectionEdit").type = "POST";
        var data = new FormData(document.forms.namedItem("formNewSafetyInspectionEdit"));

        $.ajax({
            url: 'Safety/NewSIEdit',
            data: data,
            cache: false,
            enctype: 'multipart/form-data',
            processData: false,
            contentType: false,
            type: 'POST',
            success: function (data) {
                if (data.value == "OK") {
                    $('.SafInsNew').click();
                    $('#create-SI-dialog').modal('hide');
                }
                else {
                    alertDialog("Edit Safety Inspection failed!")
                }
            }
        });
    });


    $(document).on("click", "#create-invoice-dialog-save", function () {
        debugger;

        var ityp = $('#InvoiceType').val();


        if ($("#InvoiceDate").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        if (ityp == "Select") {
            alertDialog("Please select Invoice Type");
            return;

        }

        var icat = $('#InvCategory').val();
        if (icat == "Select") {
            alertDialog("Please select Invoice Category");
            return;
        }

        if (!$('#invoicemasterForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        invdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { QuoteDescription: data[0], Quantity: parseInt(data[1]), UnitOfMeasure: data[2], QuotePrice: parseFloat(data[3]) }
            contacts.push(object);
        });



        if ($('#invoicemasterForm').valid()) {

            var qid = $('#dummyQuoteID option:selected').val();

            var quoid = qid.split('_');
            var quoteid = parseInt(quoid[1]);


            if (contacts.length == 0) {
                alertDialog("Please add atleast one description");
                return false;
            }
            if (ityp == "Quotation") {

                if ($("#ClientID").val() == 0) {
                    alertDialog("Please select client");
                    return;
                }

                var CAmt = parseFloat($('#TotalInvoiceAmount').val());
                var IAmt = parseFloat($('#QuoteFinalAmount').val());
                var PAmt = parseFloat($('#invAmt').val());

                if ((CAmt + PAmt) > IAmt) {
                    alertDialog("Invoice amount exceeds Quotation Amount");
                    return;
                }

                if ((CAmt + PAmt) == IAmt) {
                    $("#Qflag").val(2);
                }
                else {
                    $("#Qflag").val(1);
                }

                $("#QuoteID").val(quoteid);
            }
            else {

                if ($("#ClientOthers").val() == null || $("#ClientOthers").val() == '') {

                    alertDialog("Please enter Invoice To Deails");
                    return;
                }

                $("#QuoteID").val(null);
            }



            var aform = $('#invoicemasterForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_invoice_master = {};
            $('#invoicemasterForm').serializeArray().map(function (x) { eng_invoice_master[x.name] = x.value; });

            $.post("Invoice/Create", { eng_invoice_master: eng_invoice_master, quoteDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Invoice').click();
                }
                else {
                    alertDialog("Invoice creation failed!");
                }
            });
        }
    });


    $(document).on("click", "#edit-invoice-dialog-save", function () {
        debugger;

        var ityp = $('#InvoiceType').val();

        if ($("#InvoiceDate").val() == "") {
            alertDialog("Please fill mandatory fields");
            return;
        }

        var icat = $('#InvCategory').val();
        if (icat == "Select") {
            alertDialog("Please select Invoice Category");
            return;
        }

        if (!$('#invoicemasterEditForm').valid()) {
            return;
        }

        var object = {};
        contacts = [];
        invdescTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var data = this.data();

            object = { QuoteDescription: data[0], Quantity: parseInt(data[1]), UnitOfMeasure: data[2], QuotePrice: parseFloat(data[3]) }
            contacts.push(object);
        });


        if ($('#invoicemasterEditForm').valid()) {


            if (contacts.length == 0) {
                alertDialog("Please add atleast one description");
                return false;
            }
            if (ityp == "Quotation") {

                var CAmt = parseFloat($('#TotalInvoiceAmount').val());
                var IAmt = parseFloat($('#QuoteFinalAmount').val());
                var PAmt = parseFloat($('#invAmt').val());

                if ((CAmt + PAmt) > IAmt) {
                    alertDialog("Invoice amount exceeds Quotation Amount");
                    return;
                }

                if ((CAmt + PAmt) == IAmt) {
                    $("#Qflag").val(2);
                }
                else {
                    $("#Qflag").val(1);
                }
            }
            else {

                if ($("#ClientOthers").val() == null || $("#ClientOthers").val() == '') {

                    alertDialog("Please enter Invoice To Deails");
                    return;
                }
            }

            var aform = $('#invoicemasterEditForm');
            var atoken = $('input[name="__RequestVerificationToken"]', aform).val();

            var eng_invoice_master = {};
            $('#invoicemasterEditForm').serializeArray().map(function (x) { eng_invoice_master[x.name] = x.value; });

            $.post("Invoice/Edit", { eng_invoice_master: eng_invoice_master, quoteDescription: contacts, __RequestVerificationToken: atoken }, function (data) {
                if (data.value == "OK") {
                    $('.Invoice').click();
                }
                else {
                    alertDialog("Invoice updation failed!");
                }
            });
        }
    });

    @*function DeleteMenu(id)
    {

        confirmDialogYesorNo("Are you sure to delete this Menu Access ?", DeleteMenuConfirmed, null, id)
    }

    function DeleteMenuConfirmed(id)
    {

        $.post("User/DeleteMenu/", { id: id,@Html.AntiForgeryTokenForAjaxPost()}, function (data) {
            if (data.value == "OK") {
                $(".Menu").click();
                alertDialog("Deleted Successfully!")
            }
            else {
                alertDialog("Delete DTTR failed")
            }
        });
    }*@

    $(document).on("click", "#create-menu-dialog-save", function () {

        var groupid = parseInt($('#GroupID').val());
        if (groupid == 0) {
            alertDialog("Please select Group Name");
            return;
        }
        var modValues = [];
        $('input[type=checkbox][id^="ModuleId_"]:checked').each(function () {
            modValues.push($(this).val());
        });

        $.post("User/CreateMenu", { groupid: groupid, moduleList: modValues }, function (data) {
            if (data.value == "OK") {
                alertDialog("Save Successful!")
                ShowGroupMenu(groupid);
            }
            else {
                alertDialog("Menu updation failed!");
            }
        });

    });

    $(document).on("click", "#create-vehicle-dialog-save", function () {

        if (!$('#vehicleForm').valid()) {
            return;
        }


        $.post("Transport/Create", $('#vehicleForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Vehicle').click();
                $('#create-vehicle-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Vehicle Creation Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });


    $(document).on("click", "#create-vehicle-dialog-Edit", function () {

        if (!$('#vehicleEditForm').valid()) {
            return;
        }
        $.post("Transport/Edit", $('#vehicleEditForm').serialize(), function (data) {

            if (data.value == "OK") {
                $('.Vehicle').click();
                $('#create-vehicle-dialog').modal('hide');
            }
            else if (data.value == "Failed") {
                alertDialog("Vehicle update Failed!");
            }
            else {
                alertDialog(data.value);
            }

        });
    });



    $(document).ready(function () {

        $('#DBDHREmpTable').DataTable({
            //"pagingType": "full_numbers",
           // "bPaginate": true,
            "bLengthChange": false,
            "info": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "440px",
            "scrollCollapse": true,
            "paging": false,
            fixedColumns: { heightMatch: 'none'},
            dom: 'Bfrtipl',
            buttons: [

            ]

        });



    });


    $(document).ready(function () {

        $('#DBDCompanyTable').DataTable({
            //"pagingType": "full_numbers",
            // "bPaginate": true,
            "bLengthChange": false,
            "info": false,
            "bSortable": false,
            "bFilter": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "150px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });


    });

    $(document).ready(function () {

        $('#DBDVehicleTable').DataTable({
            //"pagingType": "full_numbers",
            // "bPaginate": true,
            "bLengthChange": false,
            "info": false,
            "bFilter": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "120px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });


    });

    $(document).ready(function () {

        $('#DBDReceivableTable').DataTable({
            //"pagingType": "full_numbers",
            // "bPaginate": true,
            "bLengthChange": false,
            "info": false,
            "bFilter": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "170px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });


    });


    $(document).ready(function () {

        $('#DBDPayableTable').DataTable({
            //"pagingType": "full_numbers",
            // "bPaginate": true,
            "bLengthChange": false,
            "info": false,
            "bSortable": false,
            "bFilter": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "200px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });


    });
    var dbdOptab;
    $(document).ready(function () {

        $('#DBDOperationTable').DataTable({
            "bLengthChange": false,
            "info": false,
            "bFilter": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "150px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });
    });

    $(document).ready(function () {

        $('#DBDDirectorProjectTable').DataTable({
            "bLengthChange": false,
            "info": false,
            "bFilter": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "150px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });
    });

    $(document).ready(function () {

        $('#DBDSVManProjectTable').DataTable({
            "bLengthChange": false,
            "info": false,
            "bFilter": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "150px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });
    });

    $(document).ready(function () {

        $('#DBDSVManDttrTable').DataTable({
            "bLengthChange": false,
            "info": false,
            "bFilter": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "150px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });
    });

    $(document).ready(function () {

        $('#DBDSVManQualityTable').DataTable({
            "bLengthChange": false,
            "info": false,
            "bFilter": false,
            "bSortable": false,
            "aTargets": [],
            "autoWidth": true,
            "scrollX": true,
            "order": [],
            "scrollY": "190px",
            "scrollCollapse": true,
            "paging": false,
            dom: 'Bfrtipl',
            buttons: [

            ]

        });
    });


</script>
