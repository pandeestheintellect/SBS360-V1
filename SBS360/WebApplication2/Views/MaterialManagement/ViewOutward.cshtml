@model Eng360Web.Models.ViewModel.MMOutwardViewModel

@{
    Layout = null;
    //  ViewBag.TermsAndCond = "TERMS & CONDITIONS : \n PRICE: All in Singapore dollars \n VALIDITY: Two Month from dated this quotation \n DELIVERY    : One week from upon order confirmation \n PAYMENT: 30 days from the date of invoice \n NOTE: Any others work NOT mentioned here will be additional charged.";

}

<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

<style>
    .table-condensed tbody > tr > td > a {
        color: #4eb1ba !important;
    }

    input[type='checkbox'] {
        width: 20px;
        height: 20px;
    }

    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>



<div class="row inner-page--container">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b>  Outward Details - @Model.Outward_Number  </b>

                @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>*@
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">



                    <div class="row">

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Delivery_Date, htmlAttributes: new { @class = "control-label" }) 
                            
                            <div>
                                @Html.EditorFor(model => model.Delivery_Date, new { htmlAttributes = new { @class = "form-control", @Value = Convert.ToDateTime(Model.Delivery_Date).ToString("dd/MM/yyyy"), @disabled = "disabled" } })

                            </div>
                        </div>


                      
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.StoreID, htmlAttributes: new { @class = "control-label" }) 
                           
                            <div>
                                @Html.DropDownList("StoreID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>

                        

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Branch_Name, "Company Name", htmlAttributes: new { @class = "control-label" })
                           
                            <div>
                                @Html.DropDownListFor(model => model.Branch_Name, new SelectList(
                                    new List<Object>{
                                    new { value = "City Construction Eng Pte Ltd" , text = "City Construction Eng Pte Ltd"  }

                                    }, "value", "text", 1), htmlAttributes: new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ClientID, htmlAttributes: new { @class = "control-label" })
                            
                            <div>
                                @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Outward_Type, "Outward Type", htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.DropDownListFor(model => model.Outward_Type, new SelectList(
                                    new List<Object>{
                                    new { value = 1 , text = "Delivery Order"  },
                                    new { value = 2 , text = "Transfer Order" },
                                    new { value = 3 , text = "Return Order" },
                                    new { value = 4 , text = "Material Request" },
                                    new { value = 5 , text = "Miscellaneous" }

                    }, "value", "text", 1), htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                               
                            </div>
                        </div>



                        <div class="col-md-6">
                            @Html.LabelFor(model => model.DO_Number, "DO Number", htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.DO_Number, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.DO_Date, "DO Date", htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.DO_Date, new { htmlAttributes = new { @class = "form-control", @Value = Convert.ToDateTime(Model.DO_Date).ToString("dd/MM/yyyy"), @disabled = "disabled" } })
                                
                            </div>
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.DeliveredBy, htmlAttributes: new { @class = "control-label" })
                           
                            <div>
                                @Html.DropDownList("DeliveredBy", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Project_Location, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.Project_Location, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                               

                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Delivery_Mode, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.Delivery_Mode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                

                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Vehicle_Number, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.Vehicle_Number, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                               

                            </div>
                        </div>

                        <div class="col-md-11">
                            &nbsp;
                            <div>
                                &nbsp;

                            </div>
                        </div>

                        </div>

                        
                    <div class="col-md-12" style="min-height:300px !important;padding-top:25px;padding-left:0px;padding-right:0px;">

                        <table class="table table-striped table-bordered" id="tableOutwardDesc">

                            <thead>
                                <tr>
                                    <th>Product Code</th>
                                    <th>ProductID</th>
                                    <th>Description</th>

                                    <th>UoM</th>
                                    <th>Quantity</th>
                                    <th>Remarks</th>

                                   
                                </tr>
                            </thead>
                            <tbody>
                               @foreach (var obj in Model.eng_mm_outdesc)
                               {
                                <tr id="@obj.OutDescID">
                                    <td>
                                        @obj.eng_product_master.Product_Code
                                    </td>
                                    <td>
                                        @obj.ProductID
                                    </td>
                                    <td>
                                        @obj.eng_product_master.Product_Description
                                    </td>

                                    <td>@obj.eng_product_master.Measuring_Unit</td>
                                    <td>@obj.Quantity</td>
                                    <td>@obj.Remarks</td>

                                   
                                </tr>
                               }

                            </tbody>

                        </table>

                    </div>



           

            </div>
            <div class="modal-footer">
                
                
                
               <span style="float:right">&nbsp;</span><input type="button" value="Back" id="create-outward-back" style="float:right" class="btn btn-primary Outward" />
            </div>
        </div>
    </div>
</div>

<script>

      var contacts = [];

                    var outdescTable;
                    $(document).ready(function () {

                        outdescTable = $('#tableOutwardDesc').DataTable({
                            "autoWidth": true,
                            dom: 'Brti',
                            buttons: [
                                'copyHtml5',
                                'excelHtml5',
                                'csvHtml5',
                                'pdfHtml5',

                            ],
                            "columnDefs": [
                        {
                            // The `data` parameter refers to the data for the cell (defined by the
                            // `data` option, which defaults to the column being worked with, in
                            // this case `data: 0`.
                            "render": function (data, type, row) {
                               // return '<a class="btn" onclick="removeDataFromDT(this)"> <img src="Content/images/delete.png" /> </a>';
                                return '<a> </a>';
                            },
                            "targets": 5
                        }]
                        });
                    });

                     $('.dt-button').addClass('btn btn-primary').removeClass('dt-button').css('margin-right', '5px')
                    $('.buttons-copy').css('display', 'none');
                    $('.buttons-excel').css('display', 'none');
                    $('.buttons-csv').css('display', 'none');
                    $('.buttons-pdf').css('display', 'none');
                    

</script>
