@model Eng360Web.Models.ViewModel.ClientViewModel

@{
    Layout = null;
}
<style>
    .required::after
    {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>


<div class="row inner-page--container">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <b> Add New Client  </b>

                @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>*@
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">

                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "clientForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col-md-6" style="padding-left:0px">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="form-group">
                            @Html.LabelFor(model => model.Company_Name, htmlAttributes: new { @class = "control-label required" })
                            <div class="">
                                @Html.EditorFor(model => model.Company_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Company_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.IndustryID, "IndustryID", htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.DropDownList("IndustryID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IndustryID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FunctionalityID, "FunctionalityID", htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.DropDownList("FunctionalityID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FunctionalityID, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6" style="min-height:300px !important;">

                        <table class="table table-striped table-bordered" id="tableContacts">

                            <thead>
                                <tr>
                                    <th>Prefix</th>
                                    <th>Contact Name</th>
                                    <th>Email</th>
                                    <th>Mobile</th>
                                    <th>Tel</th>
                                    <th>Actions</th>

                                </tr>
                            </thead>
                            <tbody>
                                <tr class="remove">
                                    <td>
                                        sdsd
                                    </td>
                                    <td>
                                        sdsd
                                    </td>
                                    <td>
                                        sds
                                    </td>
                                    <td>
                                        sdas
                                    </td>
                                    <td>sds</td>
                                    <td>sdsd</td>
                                </tr>

                            </tbody>

                        </table>

                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Email, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Mobile, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Tel, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Tel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Tel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Web, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Web, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Web, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Address1, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Address1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Address2, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Address2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.City, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Country, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Country, new { htmlAttributes = new { @class = "form-control", @Value="Singapore" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Postal_Code, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Postal_Code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Postal_Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Fax1, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Fax1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Fax1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.SkypeID, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.SkypeID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.SkypeID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.eng_address_master.Remarks, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.eng_address_master.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.eng_address_master.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                }
                </div>

                <div class="modal-footer">

                    <input type="button" value="Create" id="create-client-dialog-save" style="float:right" class="btn btn-primary" /><span style="float:right">&nbsp;</span><input type="button" value="Back" id="create-client-dialog-back" style="float:right" class="btn btn-primary Client" />
                </div>
            </div>
        </div>
    </div>

    <script>
        var contacts = [];
        var contactTable;
        $(document).ready(function () {
            debugger;
            contactTable = $('#tableContacts').DataTable({
                dom: 'Brti',
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5',

                ],
                "columnDefs": [
            {
                // The `data` parameter refers to the data for the cell (defined by the
                // `data` option, which defaults to the column being worked with, in
                // this case `data: 0`.
                "render": function (data, type, row) {
                    //  return '<a class="btn" onclick="removeDataFromDT(this)"> <img src="Content/images/delete.png" /> </a>';
                    return '<a class="btn" onclick="removeDataFromDT(this)" title="Delete contact" style="padding: 0px 0px;"> <i class="fa fa-trash" aria-hidden="true" style="color:orangered;font-size:24px"></i> </a>';
                },
                "targets": 5
            }]
            });
        });
        
        $('.dt-buttons').prepend('<a style="margin-bottom: 10px; background: rgb(111, 157, 205) !important; border-radius: 50px !important; margin-right: 5px;"  onclick="CreateContact()" class="dt-button  buttons-html5" tabindex="0" aria-controls="emplyeeTable" href="#"><span>Add Contacts</span></a>')
        $('.dt-button').addClass('btn btn-primary').removeClass('dt-button').css('margin-right', '5px')
        $('.buttons-copy').css('display', 'none');
        $('.buttons-excel').css('display', 'none');
        $('.buttons-csv').css('display', 'none');
        $('.buttons-pdf').css('display', 'none');
        contactTable.row('.remove').remove().draw(false);


        function removeDataFromDT(btn) {

            $(btn.closest('tr')).addClass('remove')
            contactTable.row('.remove').remove().draw(false);
        }

        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");

    </script>
